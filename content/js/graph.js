/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 25.0, "minX": 0.0, "maxY": 9193.0, "series": [{"data": [[0.0, 113.0], [0.1, 113.0], [0.2, 113.0], [0.3, 113.0], [0.4, 118.0], [0.5, 118.0], [0.6, 118.0], [0.7, 119.0], [0.8, 119.0], [0.9, 119.0], [1.0, 123.0], [1.1, 123.0], [1.2, 123.0], [1.3, 123.0], [1.4, 123.0], [1.5, 123.0], [1.6, 123.0], [1.7, 125.0], [1.8, 125.0], [1.9, 125.0], [2.0, 127.0], [2.1, 127.0], [2.2, 127.0], [2.3, 127.0], [2.4, 127.0], [2.5, 127.0], [2.6, 127.0], [2.7, 128.0], [2.8, 128.0], [2.9, 128.0], [3.0, 129.0], [3.1, 129.0], [3.2, 129.0], [3.3, 129.0], [3.4, 129.0], [3.5, 129.0], [3.6, 129.0], [3.7, 129.0], [3.8, 129.0], [3.9, 129.0], [4.0, 129.0], [4.1, 129.0], [4.2, 129.0], [4.3, 129.0], [4.4, 130.0], [4.5, 130.0], [4.6, 130.0], [4.7, 130.0], [4.8, 130.0], [4.9, 130.0], [5.0, 130.0], [5.1, 130.0], [5.2, 130.0], [5.3, 130.0], [5.4, 131.0], [5.5, 131.0], [5.6, 131.0], [5.7, 133.0], [5.8, 133.0], [5.9, 133.0], [6.0, 134.0], [6.1, 134.0], [6.2, 134.0], [6.3, 134.0], [6.4, 134.0], [6.5, 134.0], [6.6, 134.0], [6.7, 134.0], [6.8, 134.0], [6.9, 134.0], [7.0, 135.0], [7.1, 135.0], [7.2, 135.0], [7.3, 135.0], [7.4, 135.0], [7.5, 135.0], [7.6, 135.0], [7.7, 135.0], [7.8, 135.0], [7.9, 135.0], [8.0, 135.0], [8.1, 135.0], [8.2, 135.0], [8.3, 135.0], [8.4, 135.0], [8.5, 135.0], [8.6, 135.0], [8.7, 136.0], [8.8, 136.0], [8.9, 136.0], [9.0, 137.0], [9.1, 137.0], [9.2, 137.0], [9.3, 137.0], [9.4, 138.0], [9.5, 138.0], [9.6, 138.0], [9.7, 138.0], [9.8, 138.0], [9.9, 138.0], [10.0, 138.0], [10.1, 138.0], [10.2, 138.0], [10.3, 138.0], [10.4, 139.0], [10.5, 139.0], [10.6, 139.0], [10.7, 139.0], [10.8, 139.0], [10.9, 139.0], [11.0, 139.0], [11.1, 139.0], [11.2, 139.0], [11.3, 139.0], [11.4, 139.0], [11.5, 139.0], [11.6, 139.0], [11.7, 139.0], [11.8, 139.0], [11.9, 139.0], [12.0, 140.0], [12.1, 140.0], [12.2, 140.0], [12.3, 140.0], [12.4, 140.0], [12.5, 140.0], [12.6, 140.0], [12.7, 140.0], [12.8, 140.0], [12.9, 140.0], [13.0, 140.0], [13.1, 140.0], [13.2, 140.0], [13.3, 140.0], [13.4, 140.0], [13.5, 140.0], [13.6, 140.0], [13.7, 140.0], [13.8, 140.0], [13.9, 140.0], [14.0, 141.0], [14.1, 141.0], [14.2, 141.0], [14.3, 141.0], [14.4, 142.0], [14.5, 142.0], [14.6, 142.0], [14.7, 142.0], [14.8, 142.0], [14.9, 142.0], [15.0, 142.0], [15.1, 142.0], [15.2, 142.0], [15.3, 142.0], [15.4, 142.0], [15.5, 142.0], [15.6, 142.0], [15.7, 143.0], [15.8, 143.0], [15.9, 143.0], [16.0, 143.0], [16.1, 143.0], [16.2, 143.0], [16.3, 143.0], [16.4, 143.0], [16.5, 143.0], [16.6, 143.0], [16.7, 143.0], [16.8, 143.0], [16.9, 143.0], [17.0, 144.0], [17.1, 144.0], [17.2, 144.0], [17.3, 144.0], [17.4, 144.0], [17.5, 144.0], [17.6, 144.0], [17.7, 146.0], [17.8, 146.0], [17.9, 146.0], [18.0, 147.0], [18.1, 147.0], [18.2, 147.0], [18.3, 147.0], [18.4, 147.0], [18.5, 147.0], [18.6, 147.0], [18.7, 147.0], [18.8, 147.0], [18.9, 147.0], [19.0, 149.0], [19.1, 149.0], [19.2, 149.0], [19.3, 149.0], [19.4, 149.0], [19.5, 149.0], [19.6, 149.0], [19.7, 150.0], [19.8, 150.0], [19.9, 150.0], [20.0, 150.0], [20.1, 150.0], [20.2, 150.0], [20.3, 150.0], [20.4, 150.0], [20.5, 150.0], [20.6, 150.0], [20.7, 151.0], [20.8, 151.0], [20.9, 151.0], [21.0, 152.0], [21.1, 152.0], [21.2, 152.0], [21.3, 152.0], [21.4, 153.0], [21.5, 153.0], [21.6, 153.0], [21.7, 153.0], [21.8, 153.0], [21.9, 153.0], [22.0, 154.0], [22.1, 154.0], [22.2, 154.0], [22.3, 154.0], [22.4, 157.0], [22.5, 157.0], [22.6, 157.0], [22.7, 160.0], [22.8, 160.0], [22.9, 160.0], [23.0, 160.0], [23.1, 160.0], [23.2, 160.0], [23.3, 160.0], [23.4, 162.0], [23.5, 162.0], [23.6, 162.0], [23.7, 164.0], [23.8, 164.0], [23.9, 164.0], [24.0, 164.0], [24.1, 164.0], [24.2, 164.0], [24.3, 164.0], [24.4, 165.0], [24.5, 165.0], [24.6, 165.0], [24.7, 166.0], [24.8, 166.0], [24.9, 166.0], [25.0, 166.0], [25.1, 166.0], [25.2, 166.0], [25.3, 166.0], [25.4, 167.0], [25.5, 167.0], [25.6, 167.0], [25.7, 168.0], [25.8, 168.0], [25.9, 168.0], [26.0, 180.0], [26.1, 180.0], [26.2, 180.0], [26.3, 180.0], [26.4, 181.0], [26.5, 181.0], [26.6, 181.0], [26.7, 424.0], [26.8, 424.0], [26.9, 424.0], [27.0, 483.0], [27.1, 483.0], [27.2, 483.0], [27.3, 483.0], [27.4, 513.0], [27.5, 513.0], [27.6, 513.0], [27.7, 693.0], [27.8, 693.0], [27.9, 693.0], [28.0, 699.0], [28.1, 699.0], [28.2, 699.0], [28.3, 699.0], [28.4, 725.0], [28.5, 725.0], [28.6, 725.0], [28.7, 727.0], [28.8, 727.0], [28.9, 727.0], [29.0, 730.0], [29.1, 730.0], [29.2, 730.0], [29.3, 730.0], [29.4, 753.0], [29.5, 753.0], [29.6, 753.0], [29.7, 754.0], [29.8, 754.0], [29.9, 754.0], [30.0, 793.0], [30.1, 793.0], [30.2, 793.0], [30.3, 793.0], [30.4, 796.0], [30.5, 796.0], [30.6, 796.0], [30.7, 807.0], [30.8, 807.0], [30.9, 807.0], [31.0, 822.0], [31.1, 822.0], [31.2, 822.0], [31.3, 822.0], [31.4, 829.0], [31.5, 829.0], [31.6, 829.0], [31.7, 837.0], [31.8, 837.0], [31.9, 837.0], [32.0, 838.0], [32.1, 838.0], [32.2, 838.0], [32.3, 838.0], [32.4, 840.0], [32.5, 840.0], [32.6, 840.0], [32.7, 845.0], [32.8, 845.0], [32.9, 845.0], [33.0, 863.0], [33.1, 863.0], [33.2, 863.0], [33.3, 863.0], [33.4, 864.0], [33.5, 864.0], [33.6, 864.0], [33.7, 868.0], [33.8, 868.0], [33.9, 868.0], [34.0, 869.0], [34.1, 869.0], [34.2, 869.0], [34.3, 869.0], [34.4, 870.0], [34.5, 870.0], [34.6, 870.0], [34.7, 876.0], [34.8, 876.0], [34.9, 876.0], [35.0, 890.0], [35.1, 890.0], [35.2, 890.0], [35.3, 890.0], [35.4, 907.0], [35.5, 907.0], [35.6, 907.0], [35.7, 924.0], [35.8, 924.0], [35.9, 924.0], [36.0, 925.0], [36.1, 925.0], [36.2, 925.0], [36.3, 925.0], [36.4, 932.0], [36.5, 932.0], [36.6, 932.0], [36.7, 953.0], [36.8, 953.0], [36.9, 953.0], [37.0, 953.0], [37.1, 966.0], [37.2, 966.0], [37.3, 966.0], [37.4, 967.0], [37.5, 967.0], [37.6, 967.0], [37.7, 977.0], [37.8, 977.0], [37.9, 977.0], [38.0, 977.0], [38.1, 999.0], [38.2, 999.0], [38.3, 999.0], [38.4, 1002.0], [38.5, 1002.0], [38.6, 1002.0], [38.7, 1004.0], [38.8, 1004.0], [38.9, 1004.0], [39.0, 1004.0], [39.1, 1008.0], [39.2, 1008.0], [39.3, 1008.0], [39.4, 1055.0], [39.5, 1055.0], [39.6, 1055.0], [39.7, 1066.0], [39.8, 1066.0], [39.9, 1066.0], [40.0, 1066.0], [40.1, 1077.0], [40.2, 1077.0], [40.3, 1077.0], [40.4, 1086.0], [40.5, 1086.0], [40.6, 1086.0], [40.7, 1105.0], [40.8, 1105.0], [40.9, 1105.0], [41.0, 1105.0], [41.1, 1106.0], [41.2, 1106.0], [41.3, 1106.0], [41.4, 1113.0], [41.5, 1113.0], [41.6, 1113.0], [41.7, 1122.0], [41.8, 1122.0], [41.9, 1122.0], [42.0, 1122.0], [42.1, 1126.0], [42.2, 1126.0], [42.3, 1126.0], [42.4, 1139.0], [42.5, 1139.0], [42.6, 1139.0], [42.7, 1141.0], [42.8, 1141.0], [42.9, 1141.0], [43.0, 1141.0], [43.1, 1162.0], [43.2, 1162.0], [43.3, 1162.0], [43.4, 1163.0], [43.5, 1163.0], [43.6, 1163.0], [43.7, 1169.0], [43.8, 1169.0], [43.9, 1169.0], [44.0, 1169.0], [44.1, 1169.0], [44.2, 1169.0], [44.3, 1169.0], [44.4, 1172.0], [44.5, 1172.0], [44.6, 1172.0], [44.7, 1175.0], [44.8, 1175.0], [44.9, 1175.0], [45.0, 1175.0], [45.1, 1179.0], [45.2, 1179.0], [45.3, 1179.0], [45.4, 1192.0], [45.5, 1192.0], [45.6, 1192.0], [45.7, 1200.0], [45.8, 1200.0], [45.9, 1200.0], [46.0, 1200.0], [46.1, 1218.0], [46.2, 1218.0], [46.3, 1218.0], [46.4, 1240.0], [46.5, 1240.0], [46.6, 1240.0], [46.7, 1281.0], [46.8, 1281.0], [46.9, 1281.0], [47.0, 1281.0], [47.1, 1290.0], [47.2, 1290.0], [47.3, 1290.0], [47.4, 1299.0], [47.5, 1299.0], [47.6, 1299.0], [47.7, 1321.0], [47.8, 1321.0], [47.9, 1321.0], [48.0, 1321.0], [48.1, 1333.0], [48.2, 1333.0], [48.3, 1333.0], [48.4, 1345.0], [48.5, 1345.0], [48.6, 1345.0], [48.7, 1363.0], [48.8, 1363.0], [48.9, 1363.0], [49.0, 1363.0], [49.1, 1382.0], [49.2, 1382.0], [49.3, 1382.0], [49.4, 1387.0], [49.5, 1387.0], [49.6, 1387.0], [49.7, 1396.0], [49.8, 1396.0], [49.9, 1396.0], [50.0, 1396.0], [50.1, 1400.0], [50.2, 1400.0], [50.3, 1400.0], [50.4, 1440.0], [50.5, 1440.0], [50.6, 1440.0], [50.7, 1446.0], [50.8, 1446.0], [50.9, 1446.0], [51.0, 1446.0], [51.1, 1466.0], [51.2, 1466.0], [51.3, 1466.0], [51.4, 1467.0], [51.5, 1467.0], [51.6, 1467.0], [51.7, 1471.0], [51.8, 1471.0], [51.9, 1471.0], [52.0, 1471.0], [52.1, 1482.0], [52.2, 1482.0], [52.3, 1482.0], [52.4, 1545.0], [52.5, 1545.0], [52.6, 1545.0], [52.7, 1558.0], [52.8, 1558.0], [52.9, 1558.0], [53.0, 1558.0], [53.1, 1582.0], [53.2, 1582.0], [53.3, 1582.0], [53.4, 1600.0], [53.5, 1600.0], [53.6, 1600.0], [53.7, 1604.0], [53.8, 1604.0], [53.9, 1604.0], [54.0, 1604.0], [54.1, 1605.0], [54.2, 1605.0], [54.3, 1605.0], [54.4, 1620.0], [54.5, 1620.0], [54.6, 1620.0], [54.7, 1622.0], [54.8, 1622.0], [54.9, 1622.0], [55.0, 1622.0], [55.1, 1659.0], [55.2, 1659.0], [55.3, 1659.0], [55.4, 1675.0], [55.5, 1675.0], [55.6, 1675.0], [55.7, 1688.0], [55.8, 1688.0], [55.9, 1688.0], [56.0, 1688.0], [56.1, 1754.0], [56.2, 1754.0], [56.3, 1754.0], [56.4, 1809.0], [56.5, 1809.0], [56.6, 1809.0], [56.7, 1844.0], [56.8, 1844.0], [56.9, 1844.0], [57.0, 1844.0], [57.1, 1851.0], [57.2, 1851.0], [57.3, 1851.0], [57.4, 1916.0], [57.5, 1916.0], [57.6, 1916.0], [57.7, 1943.0], [57.8, 1943.0], [57.9, 1943.0], [58.0, 1943.0], [58.1, 1947.0], [58.2, 1947.0], [58.3, 1947.0], [58.4, 1950.0], [58.5, 1950.0], [58.6, 1950.0], [58.7, 1981.0], [58.8, 1981.0], [58.9, 1981.0], [59.0, 1981.0], [59.1, 1992.0], [59.2, 1992.0], [59.3, 1992.0], [59.4, 2038.0], [59.5, 2038.0], [59.6, 2038.0], [59.7, 2050.0], [59.8, 2050.0], [59.9, 2050.0], [60.0, 2050.0], [60.1, 2100.0], [60.2, 2100.0], [60.3, 2100.0], [60.4, 2131.0], [60.5, 2131.0], [60.6, 2131.0], [60.7, 2144.0], [60.8, 2144.0], [60.9, 2144.0], [61.0, 2144.0], [61.1, 2163.0], [61.2, 2163.0], [61.3, 2163.0], [61.4, 2180.0], [61.5, 2180.0], [61.6, 2180.0], [61.7, 2182.0], [61.8, 2182.0], [61.9, 2182.0], [62.0, 2182.0], [62.1, 2210.0], [62.2, 2210.0], [62.3, 2210.0], [62.4, 2212.0], [62.5, 2212.0], [62.6, 2212.0], [62.7, 2215.0], [62.8, 2215.0], [62.9, 2215.0], [63.0, 2215.0], [63.1, 2216.0], [63.2, 2216.0], [63.3, 2216.0], [63.4, 2230.0], [63.5, 2230.0], [63.6, 2230.0], [63.7, 2233.0], [63.8, 2233.0], [63.9, 2233.0], [64.0, 2233.0], [64.1, 2234.0], [64.2, 2234.0], [64.3, 2234.0], [64.4, 2256.0], [64.5, 2256.0], [64.6, 2256.0], [64.7, 2258.0], [64.8, 2258.0], [64.9, 2258.0], [65.0, 2258.0], [65.1, 2262.0], [65.2, 2262.0], [65.3, 2262.0], [65.4, 2273.0], [65.5, 2273.0], [65.6, 2273.0], [65.7, 2279.0], [65.8, 2279.0], [65.9, 2279.0], [66.0, 2279.0], [66.1, 2279.0], [66.2, 2279.0], [66.3, 2279.0], [66.4, 2280.0], [66.5, 2280.0], [66.6, 2280.0], [66.7, 2313.0], [66.8, 2313.0], [66.9, 2313.0], [67.0, 2313.0], [67.1, 2323.0], [67.2, 2323.0], [67.3, 2323.0], [67.4, 2327.0], [67.5, 2327.0], [67.6, 2327.0], [67.7, 2329.0], [67.8, 2329.0], [67.9, 2329.0], [68.0, 2329.0], [68.1, 2332.0], [68.2, 2332.0], [68.3, 2332.0], [68.4, 2351.0], [68.5, 2351.0], [68.6, 2351.0], [68.7, 2380.0], [68.8, 2380.0], [68.9, 2380.0], [69.0, 2380.0], [69.1, 2382.0], [69.2, 2382.0], [69.3, 2382.0], [69.4, 2389.0], [69.5, 2389.0], [69.6, 2389.0], [69.7, 2394.0], [69.8, 2394.0], [69.9, 2394.0], [70.0, 2394.0], [70.1, 2397.0], [70.2, 2397.0], [70.3, 2397.0], [70.4, 2408.0], [70.5, 2408.0], [70.6, 2408.0], [70.7, 2413.0], [70.8, 2413.0], [70.9, 2413.0], [71.0, 2413.0], [71.1, 2414.0], [71.2, 2414.0], [71.3, 2414.0], [71.4, 2416.0], [71.5, 2416.0], [71.6, 2416.0], [71.7, 2420.0], [71.8, 2420.0], [71.9, 2420.0], [72.0, 2420.0], [72.1, 2426.0], [72.2, 2426.0], [72.3, 2426.0], [72.4, 2429.0], [72.5, 2429.0], [72.6, 2429.0], [72.7, 2430.0], [72.8, 2430.0], [72.9, 2430.0], [73.0, 2430.0], [73.1, 2446.0], [73.2, 2446.0], [73.3, 2446.0], [73.4, 2450.0], [73.5, 2450.0], [73.6, 2450.0], [73.7, 2459.0], [73.8, 2459.0], [73.9, 2459.0], [74.0, 2459.0], [74.1, 2463.0], [74.2, 2463.0], [74.3, 2463.0], [74.4, 2466.0], [74.5, 2466.0], [74.6, 2466.0], [74.7, 2474.0], [74.8, 2474.0], [74.9, 2474.0], [75.0, 2474.0], [75.1, 2475.0], [75.2, 2475.0], [75.3, 2475.0], [75.4, 2475.0], [75.5, 2475.0], [75.6, 2475.0], [75.7, 2475.0], [75.8, 2475.0], [75.9, 2475.0], [76.0, 2475.0], [76.1, 2481.0], [76.2, 2481.0], [76.3, 2481.0], [76.4, 2482.0], [76.5, 2482.0], [76.6, 2482.0], [76.7, 2482.0], [76.8, 2482.0], [76.9, 2482.0], [77.0, 2482.0], [77.1, 2496.0], [77.2, 2496.0], [77.3, 2496.0], [77.4, 2500.0], [77.5, 2500.0], [77.6, 2500.0], [77.7, 2505.0], [77.8, 2505.0], [77.9, 2505.0], [78.0, 2505.0], [78.1, 2516.0], [78.2, 2516.0], [78.3, 2516.0], [78.4, 2527.0], [78.5, 2527.0], [78.6, 2527.0], [78.7, 2531.0], [78.8, 2531.0], [78.9, 2531.0], [79.0, 2531.0], [79.1, 2537.0], [79.2, 2537.0], [79.3, 2537.0], [79.4, 2544.0], [79.5, 2544.0], [79.6, 2544.0], [79.7, 2546.0], [79.8, 2546.0], [79.9, 2546.0], [80.0, 2553.0], [80.1, 2553.0], [80.2, 2553.0], [80.3, 2553.0], [80.4, 2563.0], [80.5, 2563.0], [80.6, 2563.0], [80.7, 2565.0], [80.8, 2565.0], [80.9, 2565.0], [81.0, 2573.0], [81.1, 2573.0], [81.2, 2573.0], [81.3, 2573.0], [81.4, 2575.0], [81.5, 2575.0], [81.6, 2575.0], [81.7, 2586.0], [81.8, 2586.0], [81.9, 2586.0], [82.0, 2588.0], [82.1, 2588.0], [82.2, 2588.0], [82.3, 2588.0], [82.4, 2589.0], [82.5, 2589.0], [82.6, 2589.0], [82.7, 2592.0], [82.8, 2592.0], [82.9, 2592.0], [83.0, 2597.0], [83.1, 2597.0], [83.2, 2597.0], [83.3, 2597.0], [83.4, 2605.0], [83.5, 2605.0], [83.6, 2605.0], [83.7, 2607.0], [83.8, 2607.0], [83.9, 2607.0], [84.0, 2609.0], [84.1, 2609.0], [84.2, 2609.0], [84.3, 2609.0], [84.4, 2616.0], [84.5, 2616.0], [84.6, 2616.0], [84.7, 2619.0], [84.8, 2619.0], [84.9, 2619.0], [85.0, 2635.0], [85.1, 2635.0], [85.2, 2635.0], [85.3, 2635.0], [85.4, 2646.0], [85.5, 2646.0], [85.6, 2646.0], [85.7, 2653.0], [85.8, 2653.0], [85.9, 2653.0], [86.0, 2659.0], [86.1, 2659.0], [86.2, 2659.0], [86.3, 2659.0], [86.4, 2660.0], [86.5, 2660.0], [86.6, 2660.0], [86.7, 2661.0], [86.8, 2661.0], [86.9, 2661.0], [87.0, 2663.0], [87.1, 2663.0], [87.2, 2663.0], [87.3, 2663.0], [87.4, 2713.0], [87.5, 2713.0], [87.6, 2713.0], [87.7, 2713.0], [87.8, 2713.0], [87.9, 2713.0], [88.0, 2723.0], [88.1, 2723.0], [88.2, 2723.0], [88.3, 2723.0], [88.4, 2728.0], [88.5, 2728.0], [88.6, 2728.0], [88.7, 2730.0], [88.8, 2730.0], [88.9, 2730.0], [89.0, 2758.0], [89.1, 2758.0], [89.2, 2758.0], [89.3, 2758.0], [89.4, 2765.0], [89.5, 2765.0], [89.6, 2765.0], [89.7, 2767.0], [89.8, 2767.0], [89.9, 2767.0], [90.0, 2773.0], [90.1, 2773.0], [90.2, 2773.0], [90.3, 2773.0], [90.4, 2773.0], [90.5, 2773.0], [90.6, 2773.0], [90.7, 2776.0], [90.8, 2776.0], [90.9, 2776.0], [91.0, 2789.0], [91.1, 2789.0], [91.2, 2789.0], [91.3, 2789.0], [91.4, 2799.0], [91.5, 2799.0], [91.6, 2799.0], [91.7, 2808.0], [91.8, 2808.0], [91.9, 2808.0], [92.0, 2809.0], [92.1, 2809.0], [92.2, 2809.0], [92.3, 2809.0], [92.4, 2829.0], [92.5, 2829.0], [92.6, 2829.0], [92.7, 2850.0], [92.8, 2850.0], [92.9, 2850.0], [93.0, 2896.0], [93.1, 2896.0], [93.2, 2896.0], [93.3, 2896.0], [93.4, 2916.0], [93.5, 2916.0], [93.6, 2916.0], [93.7, 2922.0], [93.8, 2922.0], [93.9, 2922.0], [94.0, 2927.0], [94.1, 2927.0], [94.2, 2927.0], [94.3, 2927.0], [94.4, 2948.0], [94.5, 2948.0], [94.6, 2948.0], [94.7, 3018.0], [94.8, 3018.0], [94.9, 3018.0], [95.0, 3091.0], [95.1, 3091.0], [95.2, 3091.0], [95.3, 3091.0], [95.4, 3398.0], [95.5, 3398.0], [95.6, 3398.0], [95.7, 3493.0], [95.8, 3493.0], [95.9, 3493.0], [96.0, 4017.0], [96.1, 4017.0], [96.2, 4017.0], [96.3, 4017.0], [96.4, 4178.0], [96.5, 4178.0], [96.6, 4178.0], [96.7, 4322.0], [96.8, 4322.0], [96.9, 4322.0], [97.0, 4349.0], [97.1, 4349.0], [97.2, 4349.0], [97.3, 4349.0], [97.4, 4461.0], [97.5, 4461.0], [97.6, 4461.0], [97.7, 4539.0], [97.8, 4539.0], [97.9, 4539.0], [98.0, 4646.0], [98.1, 4646.0], [98.2, 4646.0], [98.3, 4646.0], [98.4, 4649.0], [98.5, 4649.0], [98.6, 4649.0], [98.7, 4663.0], [98.8, 4663.0], [98.9, 4663.0], [99.0, 4797.0], [99.1, 4797.0], [99.2, 4797.0], [99.3, 4797.0], [99.4, 4917.0], [99.5, 4917.0], [99.6, 4917.0], [99.7, 4929.0], [99.8, 4929.0], [99.9, 4929.0]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[0.0, 25.0], [0.1, 25.0], [0.2, 25.0], [0.3, 25.0], [0.4, 25.0], [0.5, 25.0], [0.6, 25.0], [0.7, 26.0], [0.8, 26.0], [0.9, 26.0], [1.0, 26.0], [1.1, 26.0], [1.2, 26.0], [1.3, 26.0], [1.4, 26.0], [1.5, 26.0], [1.6, 26.0], [1.7, 26.0], [1.8, 26.0], [1.9, 26.0], [2.0, 27.0], [2.1, 27.0], [2.2, 27.0], [2.3, 27.0], [2.4, 27.0], [2.5, 27.0], [2.6, 27.0], [2.7, 27.0], [2.8, 27.0], [2.9, 27.0], [3.0, 27.0], [3.1, 27.0], [3.2, 27.0], [3.3, 27.0], [3.4, 28.0], [3.5, 28.0], [3.6, 28.0], [3.7, 28.0], [3.8, 28.0], [3.9, 28.0], [4.0, 28.0], [4.1, 28.0], [4.2, 28.0], [4.3, 28.0], [4.4, 28.0], [4.5, 28.0], [4.6, 28.0], [4.7, 29.0], [4.8, 29.0], [4.9, 29.0], [5.0, 29.0], [5.1, 29.0], [5.2, 29.0], [5.3, 29.0], [5.4, 29.0], [5.5, 29.0], [5.6, 29.0], [5.7, 29.0], [5.8, 29.0], [5.9, 29.0], [6.0, 29.0], [6.1, 29.0], [6.2, 29.0], [6.3, 29.0], [6.4, 29.0], [6.5, 29.0], [6.6, 29.0], [6.7, 29.0], [6.8, 29.0], [6.9, 29.0], [7.0, 29.0], [7.1, 29.0], [7.2, 29.0], [7.3, 29.0], [7.4, 29.0], [7.5, 29.0], [7.6, 29.0], [7.7, 29.0], [7.8, 29.0], [7.9, 29.0], [8.0, 29.0], [8.1, 29.0], [8.2, 29.0], [8.3, 29.0], [8.4, 29.0], [8.5, 29.0], [8.6, 29.0], [8.7, 30.0], [8.8, 30.0], [8.9, 30.0], [9.0, 30.0], [9.1, 30.0], [9.2, 30.0], [9.3, 30.0], [9.4, 30.0], [9.5, 30.0], [9.6, 30.0], [9.7, 30.0], [9.8, 30.0], [9.9, 30.0], [10.0, 30.0], [10.1, 30.0], [10.2, 30.0], [10.3, 30.0], [10.4, 30.0], [10.5, 30.0], [10.6, 30.0], [10.7, 30.0], [10.8, 30.0], [10.9, 30.0], [11.0, 31.0], [11.1, 31.0], [11.2, 31.0], [11.3, 31.0], [11.4, 31.0], [11.5, 31.0], [11.6, 31.0], [11.7, 31.0], [11.8, 31.0], [11.9, 31.0], [12.0, 31.0], [12.1, 31.0], [12.2, 31.0], [12.3, 31.0], [12.4, 32.0], [12.5, 32.0], [12.6, 32.0], [12.7, 32.0], [12.8, 32.0], [12.9, 32.0], [13.0, 32.0], [13.1, 32.0], [13.2, 32.0], [13.3, 32.0], [13.4, 32.0], [13.5, 32.0], [13.6, 32.0], [13.7, 32.0], [13.8, 32.0], [13.9, 32.0], [14.0, 32.0], [14.1, 32.0], [14.2, 32.0], [14.3, 32.0], [14.4, 33.0], [14.5, 33.0], [14.6, 33.0], [14.7, 33.0], [14.8, 33.0], [14.9, 33.0], [15.0, 33.0], [15.1, 33.0], [15.2, 33.0], [15.3, 33.0], [15.4, 33.0], [15.5, 33.0], [15.6, 33.0], [15.7, 33.0], [15.8, 33.0], [15.9, 33.0], [16.0, 33.0], [16.1, 33.0], [16.2, 33.0], [16.3, 33.0], [16.4, 34.0], [16.5, 34.0], [16.6, 34.0], [16.7, 34.0], [16.8, 34.0], [16.9, 34.0], [17.0, 34.0], [17.1, 34.0], [17.2, 34.0], [17.3, 34.0], [17.4, 34.0], [17.5, 34.0], [17.6, 34.0], [17.7, 34.0], [17.8, 34.0], [17.9, 34.0], [18.0, 34.0], [18.1, 34.0], [18.2, 34.0], [18.3, 34.0], [18.4, 34.0], [18.5, 34.0], [18.6, 34.0], [18.7, 34.0], [18.8, 34.0], [18.9, 34.0], [19.0, 34.0], [19.1, 35.0], [19.2, 35.0], [19.3, 35.0], [19.4, 35.0], [19.5, 35.0], [19.6, 35.0], [19.7, 35.0], [19.8, 35.0], [19.9, 35.0], [20.0, 35.0], [20.1, 36.0], [20.2, 36.0], [20.3, 36.0], [20.4, 36.0], [20.5, 36.0], [20.6, 36.0], [20.7, 36.0], [20.8, 36.0], [20.9, 36.0], [21.0, 36.0], [21.1, 36.0], [21.2, 36.0], [21.3, 36.0], [21.4, 36.0], [21.5, 36.0], [21.6, 36.0], [21.7, 37.0], [21.8, 37.0], [21.9, 37.0], [22.0, 37.0], [22.1, 37.0], [22.2, 37.0], [22.3, 37.0], [22.4, 37.0], [22.5, 37.0], [22.6, 37.0], [22.7, 37.0], [22.8, 37.0], [22.9, 37.0], [23.0, 37.0], [23.1, 37.0], [23.2, 37.0], [23.3, 37.0], [23.4, 38.0], [23.5, 38.0], [23.6, 38.0], [23.7, 38.0], [23.8, 38.0], [23.9, 38.0], [24.0, 38.0], [24.1, 38.0], [24.2, 38.0], [24.3, 38.0], [24.4, 38.0], [24.5, 38.0], [24.6, 38.0], [24.7, 38.0], [24.8, 38.0], [24.9, 38.0], [25.0, 38.0], [25.1, 38.0], [25.2, 38.0], [25.3, 38.0], [25.4, 38.0], [25.5, 38.0], [25.6, 38.0], [25.7, 39.0], [25.8, 39.0], [25.9, 39.0], [26.0, 39.0], [26.1, 39.0], [26.2, 39.0], [26.3, 39.0], [26.4, 40.0], [26.5, 40.0], [26.6, 40.0], [26.7, 40.0], [26.8, 40.0], [26.9, 40.0], [27.0, 40.0], [27.1, 40.0], [27.2, 40.0], [27.3, 40.0], [27.4, 40.0], [27.5, 40.0], [27.6, 40.0], [27.7, 41.0], [27.8, 41.0], [27.9, 41.0], [28.0, 41.0], [28.1, 42.0], [28.2, 42.0], [28.3, 42.0], [28.4, 43.0], [28.5, 43.0], [28.6, 43.0], [28.7, 43.0], [28.8, 43.0], [28.9, 43.0], [29.0, 43.0], [29.1, 43.0], [29.2, 43.0], [29.3, 43.0], [29.4, 44.0], [29.5, 44.0], [29.6, 44.0], [29.7, 44.0], [29.8, 44.0], [29.9, 44.0], [30.0, 44.0], [30.1, 45.0], [30.2, 45.0], [30.3, 45.0], [30.4, 46.0], [30.5, 46.0], [30.6, 46.0], [30.7, 52.0], [30.8, 52.0], [30.9, 52.0], [31.0, 55.0], [31.1, 55.0], [31.2, 55.0], [31.3, 55.0], [31.4, 1400.0], [31.5, 1400.0], [31.6, 1400.0], [31.7, 1404.0], [31.8, 1404.0], [31.9, 1404.0], [32.0, 1439.0], [32.1, 1439.0], [32.2, 1439.0], [32.3, 1439.0], [32.4, 1526.0], [32.5, 1526.0], [32.6, 1526.0], [32.7, 1634.0], [32.8, 1634.0], [32.9, 1634.0], [33.0, 1634.0], [33.1, 1634.0], [33.2, 1634.0], [33.3, 1634.0], [33.4, 1641.0], [33.5, 1641.0], [33.6, 1641.0], [33.7, 1661.0], [33.8, 1661.0], [33.9, 1661.0], [34.0, 1684.0], [34.1, 1684.0], [34.2, 1684.0], [34.3, 1684.0], [34.4, 1729.0], [34.5, 1729.0], [34.6, 1729.0], [34.7, 1760.0], [34.8, 1760.0], [34.9, 1760.0], [35.0, 1760.0], [35.1, 1781.0], [35.2, 1781.0], [35.3, 1781.0], [35.4, 1798.0], [35.5, 1798.0], [35.6, 1798.0], [35.7, 1852.0], [35.8, 1852.0], [35.9, 1852.0], [36.0, 1852.0], [36.1, 1900.0], [36.2, 1900.0], [36.3, 1900.0], [36.4, 1939.0], [36.5, 1939.0], [36.6, 1939.0], [36.7, 1951.0], [36.8, 1951.0], [36.9, 1951.0], [37.0, 1951.0], [37.1, 1966.0], [37.2, 1966.0], [37.3, 1966.0], [37.4, 1997.0], [37.5, 1997.0], [37.6, 1997.0], [37.7, 2017.0], [37.8, 2017.0], [37.9, 2017.0], [38.0, 2017.0], [38.1, 2032.0], [38.2, 2032.0], [38.3, 2032.0], [38.4, 2097.0], [38.5, 2097.0], [38.6, 2097.0], [38.7, 2099.0], [38.8, 2099.0], [38.9, 2099.0], [39.0, 2099.0], [39.1, 2178.0], [39.2, 2178.0], [39.3, 2178.0], [39.4, 2217.0], [39.5, 2217.0], [39.6, 2217.0], [39.7, 2236.0], [39.8, 2236.0], [39.9, 2236.0], [40.0, 2236.0], [40.1, 2266.0], [40.2, 2266.0], [40.3, 2266.0], [40.4, 2284.0], [40.5, 2284.0], [40.6, 2284.0], [40.7, 2293.0], [40.8, 2293.0], [40.9, 2293.0], [41.0, 2293.0], [41.1, 2320.0], [41.2, 2320.0], [41.3, 2320.0], [41.4, 2327.0], [41.5, 2327.0], [41.6, 2327.0], [41.7, 2342.0], [41.8, 2342.0], [41.9, 2342.0], [42.0, 2342.0], [42.1, 2352.0], [42.2, 2352.0], [42.3, 2352.0], [42.4, 2374.0], [42.5, 2374.0], [42.6, 2374.0], [42.7, 2377.0], [42.8, 2377.0], [42.9, 2377.0], [43.0, 2377.0], [43.1, 2418.0], [43.2, 2418.0], [43.3, 2418.0], [43.4, 2425.0], [43.5, 2425.0], [43.6, 2425.0], [43.7, 2430.0], [43.8, 2430.0], [43.9, 2430.0], [44.0, 2430.0], [44.1, 2468.0], [44.2, 2468.0], [44.3, 2468.0], [44.4, 2469.0], [44.5, 2469.0], [44.6, 2469.0], [44.7, 2490.0], [44.8, 2490.0], [44.9, 2490.0], [45.0, 2490.0], [45.1, 2507.0], [45.2, 2507.0], [45.3, 2507.0], [45.4, 2517.0], [45.5, 2517.0], [45.6, 2517.0], [45.7, 2542.0], [45.8, 2542.0], [45.9, 2542.0], [46.0, 2542.0], [46.1, 2588.0], [46.2, 2588.0], [46.3, 2588.0], [46.4, 2597.0], [46.5, 2597.0], [46.6, 2597.0], [46.7, 2600.0], [46.8, 2600.0], [46.9, 2600.0], [47.0, 2600.0], [47.1, 2601.0], [47.2, 2601.0], [47.3, 2601.0], [47.4, 2635.0], [47.5, 2635.0], [47.6, 2635.0], [47.7, 2648.0], [47.8, 2648.0], [47.9, 2648.0], [48.0, 2648.0], [48.1, 2657.0], [48.2, 2657.0], [48.3, 2657.0], [48.4, 2665.0], [48.5, 2665.0], [48.6, 2665.0], [48.7, 2688.0], [48.8, 2688.0], [48.9, 2688.0], [49.0, 2688.0], [49.1, 2692.0], [49.2, 2692.0], [49.3, 2692.0], [49.4, 2702.0], [49.5, 2702.0], [49.6, 2702.0], [49.7, 2712.0], [49.8, 2712.0], [49.9, 2712.0], [50.0, 2712.0], [50.1, 2719.0], [50.2, 2719.0], [50.3, 2719.0], [50.4, 2758.0], [50.5, 2758.0], [50.6, 2758.0], [50.7, 2785.0], [50.8, 2785.0], [50.9, 2785.0], [51.0, 2785.0], [51.1, 2814.0], [51.2, 2814.0], [51.3, 2814.0], [51.4, 2815.0], [51.5, 2815.0], [51.6, 2815.0], [51.7, 2834.0], [51.8, 2834.0], [51.9, 2834.0], [52.0, 2834.0], [52.1, 2871.0], [52.2, 2871.0], [52.3, 2871.0], [52.4, 3070.0], [52.5, 3070.0], [52.6, 3070.0], [52.7, 3302.0], [52.8, 3302.0], [52.9, 3302.0], [53.0, 3302.0], [53.1, 3306.0], [53.2, 3306.0], [53.3, 3306.0], [53.4, 3341.0], [53.5, 3341.0], [53.6, 3341.0], [53.7, 3354.0], [53.8, 3354.0], [53.9, 3354.0], [54.0, 3354.0], [54.1, 3460.0], [54.2, 3460.0], [54.3, 3460.0], [54.4, 3470.0], [54.5, 3470.0], [54.6, 3470.0], [54.7, 3499.0], [54.8, 3499.0], [54.9, 3499.0], [55.0, 3499.0], [55.1, 3514.0], [55.2, 3514.0], [55.3, 3514.0], [55.4, 3553.0], [55.5, 3553.0], [55.6, 3553.0], [55.7, 3585.0], [55.8, 3585.0], [55.9, 3585.0], [56.0, 3585.0], [56.1, 3597.0], [56.2, 3597.0], [56.3, 3597.0], [56.4, 3727.0], [56.5, 3727.0], [56.6, 3727.0], [56.7, 3748.0], [56.8, 3748.0], [56.9, 3748.0], [57.0, 3748.0], [57.1, 3824.0], [57.2, 3824.0], [57.3, 3824.0], [57.4, 3922.0], [57.5, 3922.0], [57.6, 3922.0], [57.7, 4039.0], [57.8, 4039.0], [57.9, 4039.0], [58.0, 4039.0], [58.1, 4069.0], [58.2, 4069.0], [58.3, 4069.0], [58.4, 4078.0], [58.5, 4078.0], [58.6, 4078.0], [58.7, 4087.0], [58.8, 4087.0], [58.9, 4087.0], [59.0, 4087.0], [59.1, 4106.0], [59.2, 4106.0], [59.3, 4106.0], [59.4, 4107.0], [59.5, 4107.0], [59.6, 4107.0], [59.7, 4160.0], [59.8, 4160.0], [59.9, 4160.0], [60.0, 4160.0], [60.1, 4171.0], [60.2, 4171.0], [60.3, 4171.0], [60.4, 4213.0], [60.5, 4213.0], [60.6, 4213.0], [60.7, 4213.0], [60.8, 4213.0], [60.9, 4213.0], [61.0, 4213.0], [61.1, 4261.0], [61.2, 4261.0], [61.3, 4261.0], [61.4, 4262.0], [61.5, 4262.0], [61.6, 4262.0], [61.7, 4270.0], [61.8, 4270.0], [61.9, 4270.0], [62.0, 4270.0], [62.1, 4308.0], [62.2, 4308.0], [62.3, 4308.0], [62.4, 4319.0], [62.5, 4319.0], [62.6, 4319.0], [62.7, 4328.0], [62.8, 4328.0], [62.9, 4328.0], [63.0, 4328.0], [63.1, 4330.0], [63.2, 4330.0], [63.3, 4330.0], [63.4, 4354.0], [63.5, 4354.0], [63.6, 4354.0], [63.7, 4371.0], [63.8, 4371.0], [63.9, 4371.0], [64.0, 4371.0], [64.1, 4375.0], [64.2, 4375.0], [64.3, 4375.0], [64.4, 4405.0], [64.5, 4405.0], [64.6, 4405.0], [64.7, 4426.0], [64.8, 4426.0], [64.9, 4426.0], [65.0, 4426.0], [65.1, 4428.0], [65.2, 4428.0], [65.3, 4428.0], [65.4, 4453.0], [65.5, 4453.0], [65.6, 4453.0], [65.7, 4472.0], [65.8, 4472.0], [65.9, 4472.0], [66.0, 4472.0], [66.1, 4478.0], [66.2, 4478.0], [66.3, 4478.0], [66.4, 4505.0], [66.5, 4505.0], [66.6, 4505.0], [66.7, 4510.0], [66.8, 4510.0], [66.9, 4510.0], [67.0, 4510.0], [67.1, 4609.0], [67.2, 4609.0], [67.3, 4609.0], [67.4, 4615.0], [67.5, 4615.0], [67.6, 4615.0], [67.7, 4672.0], [67.8, 4672.0], [67.9, 4672.0], [68.0, 4672.0], [68.1, 4681.0], [68.2, 4681.0], [68.3, 4681.0], [68.4, 4696.0], [68.5, 4696.0], [68.6, 4696.0], [68.7, 4702.0], [68.8, 4702.0], [68.9, 4702.0], [69.0, 4702.0], [69.1, 4707.0], [69.2, 4707.0], [69.3, 4707.0], [69.4, 4732.0], [69.5, 4732.0], [69.6, 4732.0], [69.7, 4760.0], [69.8, 4760.0], [69.9, 4760.0], [70.0, 4760.0], [70.1, 4780.0], [70.2, 4780.0], [70.3, 4780.0], [70.4, 4789.0], [70.5, 4789.0], [70.6, 4789.0], [70.7, 4807.0], [70.8, 4807.0], [70.9, 4807.0], [71.0, 4807.0], [71.1, 4827.0], [71.2, 4827.0], [71.3, 4827.0], [71.4, 4885.0], [71.5, 4885.0], [71.6, 4885.0], [71.7, 4943.0], [71.8, 4943.0], [71.9, 4943.0], [72.0, 4943.0], [72.1, 4957.0], [72.2, 4957.0], [72.3, 4957.0], [72.4, 4979.0], [72.5, 4979.0], [72.6, 4979.0], [72.7, 4999.0], [72.8, 4999.0], [72.9, 4999.0], [73.0, 4999.0], [73.1, 5006.0], [73.2, 5006.0], [73.3, 5006.0], [73.4, 5102.0], [73.5, 5102.0], [73.6, 5102.0], [73.7, 5111.0], [73.8, 5111.0], [73.9, 5111.0], [74.0, 5111.0], [74.1, 5149.0], [74.2, 5149.0], [74.3, 5149.0], [74.4, 5155.0], [74.5, 5155.0], [74.6, 5155.0], [74.7, 5163.0], [74.8, 5163.0], [74.9, 5163.0], [75.0, 5163.0], [75.1, 5170.0], [75.2, 5170.0], [75.3, 5170.0], [75.4, 5180.0], [75.5, 5180.0], [75.6, 5180.0], [75.7, 5187.0], [75.8, 5187.0], [75.9, 5187.0], [76.0, 5187.0], [76.1, 5199.0], [76.2, 5199.0], [76.3, 5199.0], [76.4, 5212.0], [76.5, 5212.0], [76.6, 5212.0], [76.7, 5228.0], [76.8, 5228.0], [76.9, 5228.0], [77.0, 5228.0], [77.1, 5230.0], [77.2, 5230.0], [77.3, 5230.0], [77.4, 5235.0], [77.5, 5235.0], [77.6, 5235.0], [77.7, 5236.0], [77.8, 5236.0], [77.9, 5236.0], [78.0, 5238.0], [78.1, 5238.0], [78.2, 5238.0], [78.3, 5238.0], [78.4, 5258.0], [78.5, 5258.0], [78.6, 5258.0], [78.7, 5282.0], [78.8, 5282.0], [78.9, 5282.0], [79.0, 5282.0], [79.1, 5282.0], [79.2, 5282.0], [79.3, 5282.0], [79.4, 5294.0], [79.5, 5294.0], [79.6, 5294.0], [79.7, 5296.0], [79.8, 5296.0], [79.9, 5296.0], [80.0, 5326.0], [80.1, 5326.0], [80.2, 5326.0], [80.3, 5326.0], [80.4, 5335.0], [80.5, 5335.0], [80.6, 5335.0], [80.7, 5336.0], [80.8, 5336.0], [80.9, 5336.0], [81.0, 5339.0], [81.1, 5339.0], [81.2, 5339.0], [81.3, 5339.0], [81.4, 5350.0], [81.5, 5350.0], [81.6, 5350.0], [81.7, 5350.0], [81.8, 5350.0], [81.9, 5350.0], [82.0, 5384.0], [82.1, 5384.0], [82.2, 5384.0], [82.3, 5384.0], [82.4, 5388.0], [82.5, 5388.0], [82.6, 5388.0], [82.7, 5401.0], [82.8, 5401.0], [82.9, 5401.0], [83.0, 5421.0], [83.1, 5421.0], [83.2, 5421.0], [83.3, 5421.0], [83.4, 5428.0], [83.5, 5428.0], [83.6, 5428.0], [83.7, 5456.0], [83.8, 5456.0], [83.9, 5456.0], [84.0, 5495.0], [84.1, 5495.0], [84.2, 5495.0], [84.3, 5495.0], [84.4, 5503.0], [84.5, 5503.0], [84.6, 5503.0], [84.7, 5516.0], [84.8, 5516.0], [84.9, 5516.0], [85.0, 5531.0], [85.1, 5531.0], [85.2, 5531.0], [85.3, 5531.0], [85.4, 5550.0], [85.5, 5550.0], [85.6, 5550.0], [85.7, 5565.0], [85.8, 5565.0], [85.9, 5565.0], [86.0, 5565.0], [86.1, 5565.0], [86.2, 5565.0], [86.3, 5565.0], [86.4, 5567.0], [86.5, 5567.0], [86.6, 5567.0], [86.7, 5603.0], [86.8, 5603.0], [86.9, 5603.0], [87.0, 5610.0], [87.1, 5610.0], [87.2, 5610.0], [87.3, 5610.0], [87.4, 5620.0], [87.5, 5620.0], [87.6, 5620.0], [87.7, 5647.0], [87.8, 5647.0], [87.9, 5647.0], [88.0, 5721.0], [88.1, 5721.0], [88.2, 5721.0], [88.3, 5721.0], [88.4, 5754.0], [88.5, 5754.0], [88.6, 5754.0], [88.7, 5779.0], [88.8, 5779.0], [88.9, 5779.0], [89.0, 5779.0], [89.1, 5779.0], [89.2, 5779.0], [89.3, 5779.0], [89.4, 5797.0], [89.5, 5797.0], [89.6, 5797.0], [89.7, 5805.0], [89.8, 5805.0], [89.9, 5805.0], [90.0, 5812.0], [90.1, 5812.0], [90.2, 5812.0], [90.3, 5812.0], [90.4, 5827.0], [90.5, 5827.0], [90.6, 5827.0], [90.7, 5838.0], [90.8, 5838.0], [90.9, 5838.0], [91.0, 5845.0], [91.1, 5845.0], [91.2, 5845.0], [91.3, 5845.0], [91.4, 5874.0], [91.5, 5874.0], [91.6, 5874.0], [91.7, 5895.0], [91.8, 5895.0], [91.9, 5895.0], [92.0, 5921.0], [92.1, 5921.0], [92.2, 5921.0], [92.3, 5921.0], [92.4, 6014.0], [92.5, 6014.0], [92.6, 6014.0], [92.7, 6031.0], [92.8, 6031.0], [92.9, 6031.0], [93.0, 6046.0], [93.1, 6046.0], [93.2, 6046.0], [93.3, 6046.0], [93.4, 6193.0], [93.5, 6193.0], [93.6, 6193.0], [93.7, 6246.0], [93.8, 6246.0], [93.9, 6246.0], [94.0, 6543.0], [94.1, 6543.0], [94.2, 6543.0], [94.3, 6543.0], [94.4, 6599.0], [94.5, 6599.0], [94.6, 6599.0], [94.7, 6618.0], [94.8, 6618.0], [94.9, 6618.0], [95.0, 6705.0], [95.1, 6705.0], [95.2, 6705.0], [95.3, 6705.0], [95.4, 6750.0], [95.5, 6750.0], [95.6, 6750.0], [95.7, 6849.0], [95.8, 6849.0], [95.9, 6849.0], [96.0, 6907.0], [96.1, 6907.0], [96.2, 6907.0], [96.3, 6907.0], [96.4, 6929.0], [96.5, 6929.0], [96.6, 6929.0], [96.7, 7249.0], [96.8, 7249.0], [96.9, 7249.0], [97.0, 7259.0], [97.1, 7259.0], [97.2, 7259.0], [97.3, 7259.0], [97.4, 7380.0], [97.5, 7380.0], [97.6, 7380.0], [97.7, 7382.0], [97.8, 7382.0], [97.9, 7382.0], [98.0, 7476.0], [98.1, 7476.0], [98.2, 7476.0], [98.3, 7476.0], [98.4, 7515.0], [98.5, 7515.0], [98.6, 7515.0], [98.7, 7599.0], [98.8, 7599.0], [98.9, 7599.0], [99.0, 7917.0], [99.1, 7917.0], [99.2, 7917.0], [99.3, 7917.0], [99.4, 8743.0], [99.5, 8743.0], [99.6, 8743.0], [99.7, 9193.0], [99.8, 9193.0], [99.9, 9193.0]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[0.0, 929.0], [0.1, 929.0], [0.2, 929.0], [0.3, 929.0], [0.4, 929.0], [0.5, 929.0], [0.6, 976.0], [0.7, 976.0], [0.8, 976.0], [0.9, 976.0], [1.0, 976.0], [1.1, 976.0], [1.2, 1022.0], [1.3, 1022.0], [1.4, 1022.0], [1.5, 1022.0], [1.6, 1022.0], [1.7, 1022.0], [1.8, 1029.0], [1.9, 1029.0], [2.0, 1029.0], [2.1, 1029.0], [2.2, 1029.0], [2.3, 1029.0], [2.4, 1029.0], [2.5, 1029.0], [2.6, 1029.0], [2.7, 1029.0], [2.8, 1029.0], [2.9, 1034.0], [3.0, 1034.0], [3.1, 1034.0], [3.2, 1034.0], [3.3, 1034.0], [3.4, 1034.0], [3.5, 1045.0], [3.6, 1045.0], [3.7, 1045.0], [3.8, 1045.0], [3.9, 1045.0], [4.0, 1047.0], [4.1, 1047.0], [4.2, 1047.0], [4.3, 1047.0], [4.4, 1047.0], [4.5, 1047.0], [4.6, 1047.0], [4.7, 1047.0], [4.8, 1047.0], [4.9, 1047.0], [5.0, 1047.0], [5.1, 1047.0], [5.2, 1093.0], [5.3, 1093.0], [5.4, 1093.0], [5.5, 1093.0], [5.6, 1093.0], [5.7, 1093.0], [5.8, 1104.0], [5.9, 1104.0], [6.0, 1104.0], [6.1, 1104.0], [6.2, 1104.0], [6.3, 1180.0], [6.4, 1180.0], [6.5, 1180.0], [6.6, 1180.0], [6.7, 1180.0], [6.8, 1180.0], [6.9, 1211.0], [7.0, 1211.0], [7.1, 1211.0], [7.2, 1211.0], [7.3, 1211.0], [7.4, 1211.0], [7.5, 1307.0], [7.6, 1307.0], [7.7, 1307.0], [7.8, 1307.0], [7.9, 1307.0], [8.0, 1369.0], [8.1, 1369.0], [8.2, 1369.0], [8.3, 1369.0], [8.4, 1369.0], [8.5, 1369.0], [8.6, 1372.0], [8.7, 1372.0], [8.8, 1372.0], [8.9, 1372.0], [9.0, 1372.0], [9.1, 1372.0], [9.2, 1389.0], [9.3, 1389.0], [9.4, 1389.0], [9.5, 1389.0], [9.6, 1389.0], [9.7, 1389.0], [9.8, 1391.0], [9.9, 1391.0], [10.0, 1391.0], [10.1, 1391.0], [10.2, 1391.0], [10.3, 1428.0], [10.4, 1428.0], [10.5, 1428.0], [10.6, 1428.0], [10.7, 1428.0], [10.8, 1428.0], [10.9, 1472.0], [11.0, 1472.0], [11.1, 1472.0], [11.2, 1472.0], [11.3, 1472.0], [11.4, 1472.0], [11.5, 1483.0], [11.6, 1483.0], [11.7, 1483.0], [11.8, 1483.0], [11.9, 1483.0], [12.0, 1492.0], [12.1, 1492.0], [12.2, 1492.0], [12.3, 1492.0], [12.4, 1492.0], [12.5, 1492.0], [12.6, 1595.0], [12.7, 1595.0], [12.8, 1595.0], [12.9, 1595.0], [13.0, 1595.0], [13.1, 1595.0], [13.2, 1605.0], [13.3, 1605.0], [13.4, 1605.0], [13.5, 1605.0], [13.6, 1605.0], [13.7, 1605.0], [13.8, 1606.0], [13.9, 1606.0], [14.0, 1606.0], [14.1, 1606.0], [14.2, 1606.0], [14.3, 1608.0], [14.4, 1608.0], [14.5, 1608.0], [14.6, 1608.0], [14.7, 1608.0], [14.8, 1608.0], [14.9, 1622.0], [15.0, 1622.0], [15.1, 1622.0], [15.2, 1622.0], [15.3, 1622.0], [15.4, 1622.0], [15.5, 1658.0], [15.6, 1658.0], [15.7, 1658.0], [15.8, 1658.0], [15.9, 1658.0], [16.0, 1701.0], [16.1, 1701.0], [16.2, 1701.0], [16.3, 1701.0], [16.4, 1701.0], [16.5, 1701.0], [16.6, 1730.0], [16.7, 1730.0], [16.8, 1730.0], [16.9, 1730.0], [17.0, 1730.0], [17.1, 1730.0], [17.2, 1742.0], [17.3, 1742.0], [17.4, 1742.0], [17.5, 1742.0], [17.6, 1742.0], [17.7, 1742.0], [17.8, 1748.0], [17.9, 1748.0], [18.0, 1748.0], [18.1, 1748.0], [18.2, 1748.0], [18.3, 1768.0], [18.4, 1768.0], [18.5, 1768.0], [18.6, 1768.0], [18.7, 1768.0], [18.8, 1768.0], [18.9, 1769.0], [19.0, 1769.0], [19.1, 1769.0], [19.2, 1769.0], [19.3, 1769.0], [19.4, 1769.0], [19.5, 1821.0], [19.6, 1821.0], [19.7, 1821.0], [19.8, 1821.0], [19.9, 1821.0], [20.0, 1821.0], [20.1, 1830.0], [20.2, 1830.0], [20.3, 1830.0], [20.4, 1830.0], [20.5, 1830.0], [20.6, 1830.0], [20.7, 1830.0], [20.8, 1830.0], [20.9, 1830.0], [21.0, 1830.0], [21.1, 1830.0], [21.2, 1850.0], [21.3, 1850.0], [21.4, 1850.0], [21.5, 1850.0], [21.6, 1850.0], [21.7, 1850.0], [21.8, 1860.0], [21.9, 1860.0], [22.0, 1860.0], [22.1, 1860.0], [22.2, 1860.0], [22.3, 1907.0], [22.4, 1907.0], [22.5, 1907.0], [22.6, 1907.0], [22.7, 1907.0], [22.8, 1907.0], [22.9, 1909.0], [23.0, 1909.0], [23.1, 1909.0], [23.2, 1909.0], [23.3, 1909.0], [23.4, 1909.0], [23.5, 1926.0], [23.6, 1926.0], [23.7, 1926.0], [23.8, 1926.0], [23.9, 1926.0], [24.0, 1926.0], [24.1, 1929.0], [24.2, 1929.0], [24.3, 1929.0], [24.4, 1929.0], [24.5, 1929.0], [24.6, 1936.0], [24.7, 1936.0], [24.8, 1936.0], [24.9, 1936.0], [25.0, 1936.0], [25.1, 1936.0], [25.2, 1959.0], [25.3, 1959.0], [25.4, 1959.0], [25.5, 1959.0], [25.6, 1959.0], [25.7, 1959.0], [25.8, 1982.0], [25.9, 1982.0], [26.0, 1982.0], [26.1, 1982.0], [26.2, 1982.0], [26.3, 1987.0], [26.4, 1987.0], [26.5, 1987.0], [26.6, 1987.0], [26.7, 1987.0], [26.8, 1987.0], [26.9, 2002.0], [27.0, 2002.0], [27.1, 2002.0], [27.2, 2002.0], [27.3, 2002.0], [27.4, 2002.0], [27.5, 2058.0], [27.6, 2058.0], [27.7, 2058.0], [27.8, 2058.0], [27.9, 2058.0], [28.0, 2058.0], [28.1, 2062.0], [28.2, 2062.0], [28.3, 2062.0], [28.4, 2062.0], [28.5, 2062.0], [28.6, 2145.0], [28.7, 2145.0], [28.8, 2145.0], [28.9, 2145.0], [29.0, 2145.0], [29.1, 2145.0], [29.2, 2165.0], [29.3, 2165.0], [29.4, 2165.0], [29.5, 2165.0], [29.6, 2165.0], [29.7, 2165.0], [29.8, 2167.0], [29.9, 2167.0], [30.0, 2167.0], [30.1, 2167.0], [30.2, 2167.0], [30.3, 2168.0], [30.4, 2168.0], [30.5, 2168.0], [30.6, 2168.0], [30.7, 2168.0], [30.8, 2168.0], [30.9, 2194.0], [31.0, 2194.0], [31.1, 2194.0], [31.2, 2194.0], [31.3, 2194.0], [31.4, 2194.0], [31.5, 2198.0], [31.6, 2198.0], [31.7, 2198.0], [31.8, 2198.0], [31.9, 2198.0], [32.0, 2198.0], [32.1, 2228.0], [32.2, 2228.0], [32.3, 2228.0], [32.4, 2228.0], [32.5, 2228.0], [32.6, 2236.0], [32.7, 2236.0], [32.8, 2236.0], [32.9, 2236.0], [33.0, 2236.0], [33.1, 2236.0], [33.2, 2238.0], [33.3, 2238.0], [33.4, 2238.0], [33.5, 2238.0], [33.6, 2238.0], [33.7, 2238.0], [33.8, 2257.0], [33.9, 2257.0], [34.0, 2257.0], [34.1, 2257.0], [34.2, 2257.0], [34.3, 2278.0], [34.4, 2278.0], [34.5, 2278.0], [34.6, 2278.0], [34.7, 2278.0], [34.8, 2278.0], [34.9, 2283.0], [35.0, 2283.0], [35.1, 2283.0], [35.2, 2283.0], [35.3, 2283.0], [35.4, 2283.0], [35.5, 2298.0], [35.6, 2298.0], [35.7, 2298.0], [35.8, 2298.0], [35.9, 2298.0], [36.0, 2298.0], [36.1, 2364.0], [36.2, 2364.0], [36.3, 2364.0], [36.4, 2364.0], [36.5, 2364.0], [36.6, 2389.0], [36.7, 2389.0], [36.8, 2389.0], [36.9, 2389.0], [37.0, 2389.0], [37.1, 2389.0], [37.2, 2397.0], [37.3, 2397.0], [37.4, 2397.0], [37.5, 2397.0], [37.6, 2397.0], [37.7, 2397.0], [37.8, 2428.0], [37.9, 2428.0], [38.0, 2428.0], [38.1, 2428.0], [38.2, 2428.0], [38.3, 2443.0], [38.4, 2443.0], [38.5, 2443.0], [38.6, 2443.0], [38.7, 2443.0], [38.8, 2443.0], [38.9, 2445.0], [39.0, 2445.0], [39.1, 2445.0], [39.2, 2445.0], [39.3, 2445.0], [39.4, 2445.0], [39.5, 2448.0], [39.6, 2448.0], [39.7, 2448.0], [39.8, 2448.0], [39.9, 2448.0], [40.0, 2460.0], [40.1, 2460.0], [40.2, 2460.0], [40.3, 2460.0], [40.4, 2460.0], [40.5, 2460.0], [40.6, 2461.0], [40.7, 2461.0], [40.8, 2461.0], [40.9, 2461.0], [41.0, 2461.0], [41.1, 2461.0], [41.2, 2467.0], [41.3, 2467.0], [41.4, 2467.0], [41.5, 2467.0], [41.6, 2467.0], [41.7, 2467.0], [41.8, 2467.0], [41.9, 2467.0], [42.0, 2467.0], [42.1, 2467.0], [42.2, 2467.0], [42.3, 2468.0], [42.4, 2468.0], [42.5, 2468.0], [42.6, 2468.0], [42.7, 2468.0], [42.8, 2468.0], [42.9, 2479.0], [43.0, 2479.0], [43.1, 2479.0], [43.2, 2479.0], [43.3, 2479.0], [43.4, 2479.0], [43.5, 2486.0], [43.6, 2486.0], [43.7, 2486.0], [43.8, 2486.0], [43.9, 2486.0], [44.0, 2504.0], [44.1, 2504.0], [44.2, 2504.0], [44.3, 2504.0], [44.4, 2504.0], [44.5, 2504.0], [44.6, 2518.0], [44.7, 2518.0], [44.8, 2518.0], [44.9, 2518.0], [45.0, 2518.0], [45.1, 2518.0], [45.2, 2528.0], [45.3, 2528.0], [45.4, 2528.0], [45.5, 2528.0], [45.6, 2528.0], [45.7, 2528.0], [45.8, 2547.0], [45.9, 2547.0], [46.0, 2547.0], [46.1, 2547.0], [46.2, 2547.0], [46.3, 2549.0], [46.4, 2549.0], [46.5, 2549.0], [46.6, 2549.0], [46.7, 2549.0], [46.8, 2549.0], [46.9, 2555.0], [47.0, 2555.0], [47.1, 2555.0], [47.2, 2555.0], [47.3, 2555.0], [47.4, 2555.0], [47.5, 2562.0], [47.6, 2562.0], [47.7, 2562.0], [47.8, 2562.0], [47.9, 2562.0], [48.0, 2587.0], [48.1, 2587.0], [48.2, 2587.0], [48.3, 2587.0], [48.4, 2587.0], [48.5, 2587.0], [48.6, 2599.0], [48.7, 2599.0], [48.8, 2599.0], [48.9, 2599.0], [49.0, 2599.0], [49.1, 2599.0], [49.2, 2601.0], [49.3, 2601.0], [49.4, 2601.0], [49.5, 2601.0], [49.6, 2601.0], [49.7, 2601.0], [49.8, 2625.0], [49.9, 2625.0], [50.0, 2625.0], [50.1, 2625.0], [50.2, 2625.0], [50.3, 2625.0], [50.4, 2625.0], [50.5, 2625.0], [50.6, 2625.0], [50.7, 2625.0], [50.8, 2625.0], [50.9, 2627.0], [51.0, 2627.0], [51.1, 2627.0], [51.2, 2627.0], [51.3, 2627.0], [51.4, 2627.0], [51.5, 2639.0], [51.6, 2639.0], [51.7, 2639.0], [51.8, 2639.0], [51.9, 2639.0], [52.0, 2647.0], [52.1, 2647.0], [52.2, 2647.0], [52.3, 2647.0], [52.4, 2647.0], [52.5, 2647.0], [52.6, 2648.0], [52.7, 2648.0], [52.8, 2648.0], [52.9, 2648.0], [53.0, 2648.0], [53.1, 2648.0], [53.2, 2658.0], [53.3, 2658.0], [53.4, 2658.0], [53.5, 2658.0], [53.6, 2658.0], [53.7, 2658.0], [53.8, 2659.0], [53.9, 2659.0], [54.0, 2659.0], [54.1, 2659.0], [54.2, 2659.0], [54.3, 2659.0], [54.4, 2659.0], [54.5, 2659.0], [54.6, 2659.0], [54.7, 2659.0], [54.8, 2659.0], [54.9, 2668.0], [55.0, 2668.0], [55.1, 2668.0], [55.2, 2668.0], [55.3, 2668.0], [55.4, 2668.0], [55.5, 2691.0], [55.6, 2691.0], [55.7, 2691.0], [55.8, 2691.0], [55.9, 2691.0], [56.0, 2699.0], [56.1, 2699.0], [56.2, 2699.0], [56.3, 2699.0], [56.4, 2699.0], [56.5, 2699.0], [56.6, 2703.0], [56.7, 2703.0], [56.8, 2703.0], [56.9, 2703.0], [57.0, 2703.0], [57.1, 2703.0], [57.2, 2706.0], [57.3, 2706.0], [57.4, 2706.0], [57.5, 2706.0], [57.6, 2706.0], [57.7, 2706.0], [57.8, 2711.0], [57.9, 2711.0], [58.0, 2711.0], [58.1, 2711.0], [58.2, 2711.0], [58.3, 2728.0], [58.4, 2728.0], [58.5, 2728.0], [58.6, 2728.0], [58.7, 2728.0], [58.8, 2728.0], [58.9, 2729.0], [59.0, 2729.0], [59.1, 2729.0], [59.2, 2729.0], [59.3, 2729.0], [59.4, 2729.0], [59.5, 2734.0], [59.6, 2734.0], [59.7, 2734.0], [59.8, 2734.0], [59.9, 2734.0], [60.0, 2736.0], [60.1, 2736.0], [60.2, 2736.0], [60.3, 2736.0], [60.4, 2736.0], [60.5, 2736.0], [60.6, 2765.0], [60.7, 2765.0], [60.8, 2765.0], [60.9, 2765.0], [61.0, 2765.0], [61.1, 2765.0], [61.2, 2765.0], [61.3, 2765.0], [61.4, 2765.0], [61.5, 2765.0], [61.6, 2765.0], [61.7, 2765.0], [61.8, 2774.0], [61.9, 2774.0], [62.0, 2774.0], [62.1, 2774.0], [62.2, 2774.0], [62.3, 2776.0], [62.4, 2776.0], [62.5, 2776.0], [62.6, 2776.0], [62.7, 2776.0], [62.8, 2776.0], [62.9, 2785.0], [63.0, 2785.0], [63.1, 2785.0], [63.2, 2785.0], [63.3, 2785.0], [63.4, 2785.0], [63.5, 2793.0], [63.6, 2793.0], [63.7, 2793.0], [63.8, 2793.0], [63.9, 2793.0], [64.0, 2795.0], [64.1, 2795.0], [64.2, 2795.0], [64.3, 2795.0], [64.4, 2795.0], [64.5, 2795.0], [64.6, 2835.0], [64.7, 2835.0], [64.8, 2835.0], [64.9, 2835.0], [65.0, 2835.0], [65.1, 2835.0], [65.2, 2835.0], [65.3, 2835.0], [65.4, 2835.0], [65.5, 2835.0], [65.6, 2835.0], [65.7, 2835.0], [65.8, 2836.0], [65.9, 2836.0], [66.0, 2836.0], [66.1, 2836.0], [66.2, 2836.0], [66.3, 2849.0], [66.4, 2849.0], [66.5, 2849.0], [66.6, 2849.0], [66.7, 2849.0], [66.8, 2849.0], [66.9, 2854.0], [67.0, 2854.0], [67.1, 2854.0], [67.2, 2854.0], [67.3, 2854.0], [67.4, 2854.0], [67.5, 2857.0], [67.6, 2857.0], [67.7, 2857.0], [67.8, 2857.0], [67.9, 2857.0], [68.0, 2869.0], [68.1, 2869.0], [68.2, 2869.0], [68.3, 2869.0], [68.4, 2869.0], [68.5, 2869.0], [68.6, 2872.0], [68.7, 2872.0], [68.8, 2872.0], [68.9, 2872.0], [69.0, 2872.0], [69.1, 2872.0], [69.2, 2881.0], [69.3, 2881.0], [69.4, 2881.0], [69.5, 2881.0], [69.6, 2881.0], [69.7, 2881.0], [69.8, 2884.0], [69.9, 2884.0], [70.0, 2884.0], [70.1, 2884.0], [70.2, 2884.0], [70.3, 2884.0], [70.4, 2884.0], [70.5, 2884.0], [70.6, 2884.0], [70.7, 2884.0], [70.8, 2884.0], [70.9, 2889.0], [71.0, 2889.0], [71.1, 2889.0], [71.2, 2889.0], [71.3, 2889.0], [71.4, 2889.0], [71.5, 2893.0], [71.6, 2893.0], [71.7, 2893.0], [71.8, 2893.0], [71.9, 2893.0], [72.0, 2894.0], [72.1, 2894.0], [72.2, 2894.0], [72.3, 2894.0], [72.4, 2894.0], [72.5, 2894.0], [72.6, 2901.0], [72.7, 2901.0], [72.8, 2901.0], [72.9, 2901.0], [73.0, 2901.0], [73.1, 2901.0], [73.2, 2903.0], [73.3, 2903.0], [73.4, 2903.0], [73.5, 2903.0], [73.6, 2903.0], [73.7, 2903.0], [73.8, 2908.0], [73.9, 2908.0], [74.0, 2908.0], [74.1, 2908.0], [74.2, 2908.0], [74.3, 2911.0], [74.4, 2911.0], [74.5, 2911.0], [74.6, 2911.0], [74.7, 2911.0], [74.8, 2911.0], [74.9, 2917.0], [75.0, 2917.0], [75.1, 2917.0], [75.2, 2917.0], [75.3, 2917.0], [75.4, 2917.0], [75.5, 2919.0], [75.6, 2919.0], [75.7, 2919.0], [75.8, 2919.0], [75.9, 2919.0], [76.0, 2920.0], [76.1, 2920.0], [76.2, 2920.0], [76.3, 2920.0], [76.4, 2920.0], [76.5, 2920.0], [76.6, 2925.0], [76.7, 2925.0], [76.8, 2925.0], [76.9, 2925.0], [77.0, 2925.0], [77.1, 2925.0], [77.2, 2930.0], [77.3, 2930.0], [77.4, 2930.0], [77.5, 2930.0], [77.6, 2930.0], [77.7, 2930.0], [77.8, 2931.0], [77.9, 2931.0], [78.0, 2931.0], [78.1, 2931.0], [78.2, 2931.0], [78.3, 2932.0], [78.4, 2932.0], [78.5, 2932.0], [78.6, 2932.0], [78.7, 2932.0], [78.8, 2932.0], [78.9, 2940.0], [79.0, 2940.0], [79.1, 2940.0], [79.2, 2940.0], [79.3, 2940.0], [79.4, 2940.0], [79.5, 2949.0], [79.6, 2949.0], [79.7, 2949.0], [79.8, 2949.0], [79.9, 2949.0], [80.0, 2954.0], [80.1, 2954.0], [80.2, 2954.0], [80.3, 2954.0], [80.4, 2954.0], [80.5, 2954.0], [80.6, 2963.0], [80.7, 2963.0], [80.8, 2963.0], [80.9, 2963.0], [81.0, 2963.0], [81.1, 2963.0], [81.2, 2978.0], [81.3, 2978.0], [81.4, 2978.0], [81.5, 2978.0], [81.6, 2978.0], [81.7, 2978.0], [81.8, 2981.0], [81.9, 2981.0], [82.0, 2981.0], [82.1, 2981.0], [82.2, 2981.0], [82.3, 2985.0], [82.4, 2985.0], [82.5, 2985.0], [82.6, 2985.0], [82.7, 2985.0], [82.8, 2985.0], [82.9, 2986.0], [83.0, 2986.0], [83.1, 2986.0], [83.2, 2986.0], [83.3, 2986.0], [83.4, 2986.0], [83.5, 2991.0], [83.6, 2991.0], [83.7, 2991.0], [83.8, 2991.0], [83.9, 2991.0], [84.0, 2998.0], [84.1, 2998.0], [84.2, 2998.0], [84.3, 2998.0], [84.4, 2998.0], [84.5, 2998.0], [84.6, 3015.0], [84.7, 3015.0], [84.8, 3015.0], [84.9, 3015.0], [85.0, 3015.0], [85.1, 3015.0], [85.2, 3018.0], [85.3, 3018.0], [85.4, 3018.0], [85.5, 3018.0], [85.6, 3018.0], [85.7, 3018.0], [85.8, 3020.0], [85.9, 3020.0], [86.0, 3020.0], [86.1, 3020.0], [86.2, 3020.0], [86.3, 3035.0], [86.4, 3035.0], [86.5, 3035.0], [86.6, 3035.0], [86.7, 3035.0], [86.8, 3035.0], [86.9, 3038.0], [87.0, 3038.0], [87.1, 3038.0], [87.2, 3038.0], [87.3, 3038.0], [87.4, 3038.0], [87.5, 3039.0], [87.6, 3039.0], [87.7, 3039.0], [87.8, 3039.0], [87.9, 3039.0], [88.0, 3040.0], [88.1, 3040.0], [88.2, 3040.0], [88.3, 3040.0], [88.4, 3040.0], [88.5, 3040.0], [88.6, 3051.0], [88.7, 3051.0], [88.8, 3051.0], [88.9, 3051.0], [89.0, 3051.0], [89.1, 3051.0], [89.2, 3055.0], [89.3, 3055.0], [89.4, 3055.0], [89.5, 3055.0], [89.6, 3055.0], [89.7, 3055.0], [89.8, 3069.0], [89.9, 3069.0], [90.0, 3069.0], [90.1, 3069.0], [90.2, 3069.0], [90.3, 3097.0], [90.4, 3097.0], [90.5, 3097.0], [90.6, 3097.0], [90.7, 3097.0], [90.8, 3097.0], [90.9, 3112.0], [91.0, 3112.0], [91.1, 3112.0], [91.2, 3112.0], [91.3, 3112.0], [91.4, 3112.0], [91.5, 3113.0], [91.6, 3113.0], [91.7, 3113.0], [91.8, 3113.0], [91.9, 3113.0], [92.0, 3130.0], [92.1, 3130.0], [92.2, 3130.0], [92.3, 3130.0], [92.4, 3130.0], [92.5, 3130.0], [92.6, 3137.0], [92.7, 3137.0], [92.8, 3137.0], [92.9, 3137.0], [93.0, 3137.0], [93.1, 3137.0], [93.2, 3139.0], [93.3, 3139.0], [93.4, 3139.0], [93.5, 3139.0], [93.6, 3139.0], [93.7, 3139.0], [93.8, 3143.0], [93.9, 3143.0], [94.0, 3143.0], [94.1, 3143.0], [94.2, 3143.0], [94.3, 3149.0], [94.4, 3149.0], [94.5, 3149.0], [94.6, 3149.0], [94.7, 3149.0], [94.8, 3149.0], [94.9, 3166.0], [95.0, 3166.0], [95.1, 3166.0], [95.2, 3166.0], [95.3, 3166.0], [95.4, 3166.0], [95.5, 3216.0], [95.6, 3216.0], [95.7, 3216.0], [95.8, 3216.0], [95.9, 3216.0], [96.0, 3269.0], [96.1, 3269.0], [96.2, 3269.0], [96.3, 3269.0], [96.4, 3269.0], [96.5, 3269.0], [96.6, 3747.0], [96.7, 3747.0], [96.8, 3747.0], [96.9, 3747.0], [97.0, 3747.0], [97.1, 3747.0], [97.2, 4050.0], [97.3, 4050.0], [97.4, 4050.0], [97.5, 4050.0], [97.6, 4050.0], [97.7, 4050.0], [97.8, 4845.0], [97.9, 4845.0], [98.0, 4845.0], [98.1, 4845.0], [98.2, 4845.0], [98.3, 4959.0], [98.4, 4959.0], [98.5, 4959.0], [98.6, 4959.0], [98.7, 4959.0], [98.8, 4959.0], [98.9, 5156.0], [99.0, 5156.0], [99.1, 5156.0], [99.2, 5156.0], [99.3, 5156.0], [99.4, 5156.0], [99.5, 5647.0], [99.6, 5647.0], [99.7, 5647.0], [99.8, 5647.0], [99.9, 5647.0]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[0.0, 26.0], [0.1, 26.0], [0.2, 26.0], [0.3, 26.0], [0.4, 26.0], [0.5, 26.0], [0.6, 26.0], [0.7, 26.0], [0.8, 26.0], [0.9, 26.0], [1.0, 26.0], [1.1, 26.0], [1.2, 27.0], [1.3, 27.0], [1.4, 27.0], [1.5, 27.0], [1.6, 27.0], [1.7, 27.0], [1.8, 28.0], [1.9, 28.0], [2.0, 28.0], [2.1, 28.0], [2.2, 28.0], [2.3, 28.0], [2.4, 28.0], [2.5, 28.0], [2.6, 28.0], [2.7, 28.0], [2.8, 28.0], [2.9, 29.0], [3.0, 29.0], [3.1, 29.0], [3.2, 29.0], [3.3, 29.0], [3.4, 29.0], [3.5, 29.0], [3.6, 29.0], [3.7, 29.0], [3.8, 29.0], [3.9, 29.0], [4.0, 30.0], [4.1, 30.0], [4.2, 30.0], [4.3, 30.0], [4.4, 30.0], [4.5, 30.0], [4.6, 30.0], [4.7, 30.0], [4.8, 30.0], [4.9, 30.0], [5.0, 30.0], [5.1, 30.0], [5.2, 30.0], [5.3, 30.0], [5.4, 30.0], [5.5, 30.0], [5.6, 30.0], [5.7, 30.0], [5.8, 31.0], [5.9, 31.0], [6.0, 31.0], [6.1, 31.0], [6.2, 31.0], [6.3, 31.0], [6.4, 31.0], [6.5, 31.0], [6.6, 31.0], [6.7, 31.0], [6.8, 31.0], [6.9, 31.0], [7.0, 31.0], [7.1, 31.0], [7.2, 31.0], [7.3, 31.0], [7.4, 31.0], [7.5, 32.0], [7.6, 32.0], [7.7, 32.0], [7.8, 32.0], [7.9, 32.0], [8.0, 33.0], [8.1, 33.0], [8.2, 33.0], [8.3, 33.0], [8.4, 33.0], [8.5, 33.0], [8.6, 33.0], [8.7, 33.0], [8.8, 33.0], [8.9, 33.0], [9.0, 33.0], [9.1, 33.0], [9.2, 34.0], [9.3, 34.0], [9.4, 34.0], [9.5, 34.0], [9.6, 34.0], [9.7, 34.0], [9.8, 34.0], [9.9, 34.0], [10.0, 34.0], [10.1, 34.0], [10.2, 34.0], [10.3, 35.0], [10.4, 35.0], [10.5, 35.0], [10.6, 35.0], [10.7, 35.0], [10.8, 35.0], [10.9, 36.0], [11.0, 36.0], [11.1, 36.0], [11.2, 36.0], [11.3, 36.0], [11.4, 36.0], [11.5, 36.0], [11.6, 36.0], [11.7, 36.0], [11.8, 36.0], [11.9, 36.0], [12.0, 37.0], [12.1, 37.0], [12.2, 37.0], [12.3, 37.0], [12.4, 37.0], [12.5, 37.0], [12.6, 37.0], [12.7, 37.0], [12.8, 37.0], [12.9, 37.0], [13.0, 37.0], [13.1, 37.0], [13.2, 38.0], [13.3, 38.0], [13.4, 38.0], [13.5, 38.0], [13.6, 38.0], [13.7, 38.0], [13.8, 38.0], [13.9, 38.0], [14.0, 38.0], [14.1, 38.0], [14.2, 38.0], [14.3, 39.0], [14.4, 39.0], [14.5, 39.0], [14.6, 39.0], [14.7, 39.0], [14.8, 39.0], [14.9, 39.0], [15.0, 39.0], [15.1, 39.0], [15.2, 39.0], [15.3, 39.0], [15.4, 39.0], [15.5, 40.0], [15.6, 40.0], [15.7, 40.0], [15.8, 40.0], [15.9, 40.0], [16.0, 41.0], [16.1, 41.0], [16.2, 41.0], [16.3, 41.0], [16.4, 41.0], [16.5, 41.0], [16.6, 44.0], [16.7, 44.0], [16.8, 44.0], [16.9, 44.0], [17.0, 44.0], [17.1, 44.0], [17.2, 49.0], [17.3, 49.0], [17.4, 49.0], [17.5, 49.0], [17.6, 49.0], [17.7, 49.0], [17.8, 49.0], [17.9, 49.0], [18.0, 49.0], [18.1, 49.0], [18.2, 49.0], [18.3, 928.0], [18.4, 928.0], [18.5, 928.0], [18.6, 928.0], [18.7, 928.0], [18.8, 928.0], [18.9, 1103.0], [19.0, 1103.0], [19.1, 1103.0], [19.2, 1103.0], [19.3, 1103.0], [19.4, 1103.0], [19.5, 1120.0], [19.6, 1120.0], [19.7, 1120.0], [19.8, 1120.0], [19.9, 1120.0], [20.0, 1120.0], [20.1, 1241.0], [20.2, 1241.0], [20.3, 1241.0], [20.4, 1241.0], [20.5, 1241.0], [20.6, 1376.0], [20.7, 1376.0], [20.8, 1376.0], [20.9, 1376.0], [21.0, 1376.0], [21.1, 1376.0], [21.2, 1453.0], [21.3, 1453.0], [21.4, 1453.0], [21.5, 1453.0], [21.6, 1453.0], [21.7, 1453.0], [21.8, 1469.0], [21.9, 1469.0], [22.0, 1469.0], [22.1, 1469.0], [22.2, 1469.0], [22.3, 1603.0], [22.4, 1603.0], [22.5, 1603.0], [22.6, 1603.0], [22.7, 1603.0], [22.8, 1603.0], [22.9, 1640.0], [23.0, 1640.0], [23.1, 1640.0], [23.2, 1640.0], [23.3, 1640.0], [23.4, 1640.0], [23.5, 1644.0], [23.6, 1644.0], [23.7, 1644.0], [23.8, 1644.0], [23.9, 1644.0], [24.0, 1644.0], [24.1, 1772.0], [24.2, 1772.0], [24.3, 1772.0], [24.4, 1772.0], [24.5, 1772.0], [24.6, 1773.0], [24.7, 1773.0], [24.8, 1773.0], [24.9, 1773.0], [25.0, 1773.0], [25.1, 1773.0], [25.2, 1781.0], [25.3, 1781.0], [25.4, 1781.0], [25.5, 1781.0], [25.6, 1781.0], [25.7, 1781.0], [25.8, 1842.0], [25.9, 1842.0], [26.0, 1842.0], [26.1, 1842.0], [26.2, 1842.0], [26.3, 1849.0], [26.4, 1849.0], [26.5, 1849.0], [26.6, 1849.0], [26.7, 1849.0], [26.8, 1849.0], [26.9, 1863.0], [27.0, 1863.0], [27.1, 1863.0], [27.2, 1863.0], [27.3, 1863.0], [27.4, 1863.0], [27.5, 1894.0], [27.6, 1894.0], [27.7, 1894.0], [27.8, 1894.0], [27.9, 1894.0], [28.0, 1894.0], [28.1, 1913.0], [28.2, 1913.0], [28.3, 1913.0], [28.4, 1913.0], [28.5, 1913.0], [28.6, 1938.0], [28.7, 1938.0], [28.8, 1938.0], [28.9, 1938.0], [29.0, 1938.0], [29.1, 1938.0], [29.2, 1943.0], [29.3, 1943.0], [29.4, 1943.0], [29.5, 1943.0], [29.6, 1943.0], [29.7, 1943.0], [29.8, 1979.0], [29.9, 1979.0], [30.0, 1979.0], [30.1, 1979.0], [30.2, 1979.0], [30.3, 2003.0], [30.4, 2003.0], [30.5, 2003.0], [30.6, 2003.0], [30.7, 2003.0], [30.8, 2003.0], [30.9, 2005.0], [31.0, 2005.0], [31.1, 2005.0], [31.2, 2005.0], [31.3, 2005.0], [31.4, 2005.0], [31.5, 2012.0], [31.6, 2012.0], [31.7, 2012.0], [31.8, 2012.0], [31.9, 2012.0], [32.0, 2012.0], [32.1, 2013.0], [32.2, 2013.0], [32.3, 2013.0], [32.4, 2013.0], [32.5, 2013.0], [32.6, 2013.0], [32.7, 2013.0], [32.8, 2013.0], [32.9, 2013.0], [33.0, 2013.0], [33.1, 2013.0], [33.2, 2014.0], [33.3, 2014.0], [33.4, 2014.0], [33.5, 2014.0], [33.6, 2014.0], [33.7, 2014.0], [33.8, 2066.0], [33.9, 2066.0], [34.0, 2066.0], [34.1, 2066.0], [34.2, 2066.0], [34.3, 2070.0], [34.4, 2070.0], [34.5, 2070.0], [34.6, 2070.0], [34.7, 2070.0], [34.8, 2070.0], [34.9, 2071.0], [35.0, 2071.0], [35.1, 2071.0], [35.2, 2071.0], [35.3, 2071.0], [35.4, 2071.0], [35.5, 2073.0], [35.6, 2073.0], [35.7, 2073.0], [35.8, 2073.0], [35.9, 2073.0], [36.0, 2073.0], [36.1, 2116.0], [36.2, 2116.0], [36.3, 2116.0], [36.4, 2116.0], [36.5, 2116.0], [36.6, 2129.0], [36.7, 2129.0], [36.8, 2129.0], [36.9, 2129.0], [37.0, 2129.0], [37.1, 2129.0], [37.2, 2130.0], [37.3, 2130.0], [37.4, 2130.0], [37.5, 2130.0], [37.6, 2130.0], [37.7, 2130.0], [37.8, 2144.0], [37.9, 2144.0], [38.0, 2144.0], [38.1, 2144.0], [38.2, 2144.0], [38.3, 2148.0], [38.4, 2148.0], [38.5, 2148.0], [38.6, 2148.0], [38.7, 2148.0], [38.8, 2148.0], [38.9, 2151.0], [39.0, 2151.0], [39.1, 2151.0], [39.2, 2151.0], [39.3, 2151.0], [39.4, 2151.0], [39.5, 2154.0], [39.6, 2154.0], [39.7, 2154.0], [39.8, 2154.0], [39.9, 2154.0], [40.0, 2154.0], [40.1, 2160.0], [40.2, 2160.0], [40.3, 2160.0], [40.4, 2160.0], [40.5, 2160.0], [40.6, 2191.0], [40.7, 2191.0], [40.8, 2191.0], [40.9, 2191.0], [41.0, 2191.0], [41.1, 2191.0], [41.2, 2212.0], [41.3, 2212.0], [41.4, 2212.0], [41.5, 2212.0], [41.6, 2212.0], [41.7, 2212.0], [41.8, 2269.0], [41.9, 2269.0], [42.0, 2269.0], [42.1, 2269.0], [42.2, 2269.0], [42.3, 2282.0], [42.4, 2282.0], [42.5, 2282.0], [42.6, 2282.0], [42.7, 2282.0], [42.8, 2282.0], [42.9, 2283.0], [43.0, 2283.0], [43.1, 2283.0], [43.2, 2283.0], [43.3, 2283.0], [43.4, 2283.0], [43.5, 2285.0], [43.6, 2285.0], [43.7, 2285.0], [43.8, 2285.0], [43.9, 2285.0], [44.0, 2298.0], [44.1, 2298.0], [44.2, 2298.0], [44.3, 2298.0], [44.4, 2298.0], [44.5, 2298.0], [44.6, 2306.0], [44.7, 2306.0], [44.8, 2306.0], [44.9, 2306.0], [45.0, 2306.0], [45.1, 2306.0], [45.2, 2312.0], [45.3, 2312.0], [45.4, 2312.0], [45.5, 2312.0], [45.6, 2312.0], [45.7, 2312.0], [45.8, 2313.0], [45.9, 2313.0], [46.0, 2313.0], [46.1, 2313.0], [46.2, 2313.0], [46.3, 2320.0], [46.4, 2320.0], [46.5, 2320.0], [46.6, 2320.0], [46.7, 2320.0], [46.8, 2320.0], [46.9, 2325.0], [47.0, 2325.0], [47.1, 2325.0], [47.2, 2325.0], [47.3, 2325.0], [47.4, 2325.0], [47.5, 2328.0], [47.6, 2328.0], [47.7, 2328.0], [47.8, 2328.0], [47.9, 2328.0], [48.0, 2336.0], [48.1, 2336.0], [48.2, 2336.0], [48.3, 2336.0], [48.4, 2336.0], [48.5, 2336.0], [48.6, 2351.0], [48.7, 2351.0], [48.8, 2351.0], [48.9, 2351.0], [49.0, 2351.0], [49.1, 2351.0], [49.2, 2354.0], [49.3, 2354.0], [49.4, 2354.0], [49.5, 2354.0], [49.6, 2354.0], [49.7, 2354.0], [49.8, 2355.0], [49.9, 2355.0], [50.0, 2355.0], [50.1, 2355.0], [50.2, 2355.0], [50.3, 2357.0], [50.4, 2357.0], [50.5, 2357.0], [50.6, 2357.0], [50.7, 2357.0], [50.8, 2357.0], [50.9, 2358.0], [51.0, 2358.0], [51.1, 2358.0], [51.2, 2358.0], [51.3, 2358.0], [51.4, 2358.0], [51.5, 2390.0], [51.6, 2390.0], [51.7, 2390.0], [51.8, 2390.0], [51.9, 2390.0], [52.0, 2394.0], [52.1, 2394.0], [52.2, 2394.0], [52.3, 2394.0], [52.4, 2394.0], [52.5, 2394.0], [52.6, 2421.0], [52.7, 2421.0], [52.8, 2421.0], [52.9, 2421.0], [53.0, 2421.0], [53.1, 2421.0], [53.2, 2425.0], [53.3, 2425.0], [53.4, 2425.0], [53.5, 2425.0], [53.6, 2425.0], [53.7, 2425.0], [53.8, 2431.0], [53.9, 2431.0], [54.0, 2431.0], [54.1, 2431.0], [54.2, 2431.0], [54.3, 2442.0], [54.4, 2442.0], [54.5, 2442.0], [54.6, 2442.0], [54.7, 2442.0], [54.8, 2442.0], [54.9, 2442.0], [55.0, 2442.0], [55.1, 2442.0], [55.2, 2442.0], [55.3, 2442.0], [55.4, 2442.0], [55.5, 2447.0], [55.6, 2447.0], [55.7, 2447.0], [55.8, 2447.0], [55.9, 2447.0], [56.0, 2449.0], [56.1, 2449.0], [56.2, 2449.0], [56.3, 2449.0], [56.4, 2449.0], [56.5, 2449.0], [56.6, 2453.0], [56.7, 2453.0], [56.8, 2453.0], [56.9, 2453.0], [57.0, 2453.0], [57.1, 2453.0], [57.2, 2456.0], [57.3, 2456.0], [57.4, 2456.0], [57.5, 2456.0], [57.6, 2456.0], [57.7, 2456.0], [57.8, 2459.0], [57.9, 2459.0], [58.0, 2459.0], [58.1, 2459.0], [58.2, 2459.0], [58.3, 2465.0], [58.4, 2465.0], [58.5, 2465.0], [58.6, 2465.0], [58.7, 2465.0], [58.8, 2465.0], [58.9, 2466.0], [59.0, 2466.0], [59.1, 2466.0], [59.2, 2466.0], [59.3, 2466.0], [59.4, 2466.0], [59.5, 2483.0], [59.6, 2483.0], [59.7, 2483.0], [59.8, 2483.0], [59.9, 2483.0], [60.0, 2491.0], [60.1, 2491.0], [60.2, 2491.0], [60.3, 2491.0], [60.4, 2491.0], [60.5, 2491.0], [60.6, 2515.0], [60.7, 2515.0], [60.8, 2515.0], [60.9, 2515.0], [61.0, 2515.0], [61.1, 2515.0], [61.2, 2517.0], [61.3, 2517.0], [61.4, 2517.0], [61.5, 2517.0], [61.6, 2517.0], [61.7, 2517.0], [61.8, 2529.0], [61.9, 2529.0], [62.0, 2529.0], [62.1, 2529.0], [62.2, 2529.0], [62.3, 2536.0], [62.4, 2536.0], [62.5, 2536.0], [62.6, 2536.0], [62.7, 2536.0], [62.8, 2536.0], [62.9, 2541.0], [63.0, 2541.0], [63.1, 2541.0], [63.2, 2541.0], [63.3, 2541.0], [63.4, 2541.0], [63.5, 2546.0], [63.6, 2546.0], [63.7, 2546.0], [63.8, 2546.0], [63.9, 2546.0], [64.0, 2553.0], [64.1, 2553.0], [64.2, 2553.0], [64.3, 2553.0], [64.4, 2553.0], [64.5, 2553.0], [64.6, 2563.0], [64.7, 2563.0], [64.8, 2563.0], [64.9, 2563.0], [65.0, 2563.0], [65.1, 2563.0], [65.2, 2584.0], [65.3, 2584.0], [65.4, 2584.0], [65.5, 2584.0], [65.6, 2584.0], [65.7, 2584.0], [65.8, 2587.0], [65.9, 2587.0], [66.0, 2587.0], [66.1, 2587.0], [66.2, 2587.0], [66.3, 2594.0], [66.4, 2594.0], [66.5, 2594.0], [66.6, 2594.0], [66.7, 2594.0], [66.8, 2594.0], [66.9, 2595.0], [67.0, 2595.0], [67.1, 2595.0], [67.2, 2595.0], [67.3, 2595.0], [67.4, 2595.0], [67.5, 2610.0], [67.6, 2610.0], [67.7, 2610.0], [67.8, 2610.0], [67.9, 2610.0], [68.0, 2623.0], [68.1, 2623.0], [68.2, 2623.0], [68.3, 2623.0], [68.4, 2623.0], [68.5, 2623.0], [68.6, 2641.0], [68.7, 2641.0], [68.8, 2641.0], [68.9, 2641.0], [69.0, 2641.0], [69.1, 2641.0], [69.2, 2642.0], [69.3, 2642.0], [69.4, 2642.0], [69.5, 2642.0], [69.6, 2642.0], [69.7, 2642.0], [69.8, 2644.0], [69.9, 2644.0], [70.0, 2644.0], [70.1, 2644.0], [70.2, 2644.0], [70.3, 2660.0], [70.4, 2660.0], [70.5, 2660.0], [70.6, 2660.0], [70.7, 2660.0], [70.8, 2660.0], [70.9, 2667.0], [71.0, 2667.0], [71.1, 2667.0], [71.2, 2667.0], [71.3, 2667.0], [71.4, 2667.0], [71.5, 2671.0], [71.6, 2671.0], [71.7, 2671.0], [71.8, 2671.0], [71.9, 2671.0], [72.0, 2694.0], [72.1, 2694.0], [72.2, 2694.0], [72.3, 2694.0], [72.4, 2694.0], [72.5, 2694.0], [72.6, 2701.0], [72.7, 2701.0], [72.8, 2701.0], [72.9, 2701.0], [73.0, 2701.0], [73.1, 2701.0], [73.2, 2716.0], [73.3, 2716.0], [73.4, 2716.0], [73.5, 2716.0], [73.6, 2716.0], [73.7, 2716.0], [73.8, 2718.0], [73.9, 2718.0], [74.0, 2718.0], [74.1, 2718.0], [74.2, 2718.0], [74.3, 2729.0], [74.4, 2729.0], [74.5, 2729.0], [74.6, 2729.0], [74.7, 2729.0], [74.8, 2729.0], [74.9, 2740.0], [75.0, 2740.0], [75.1, 2740.0], [75.2, 2740.0], [75.3, 2740.0], [75.4, 2740.0], [75.5, 2767.0], [75.6, 2767.0], [75.7, 2767.0], [75.8, 2767.0], [75.9, 2767.0], [76.0, 2775.0], [76.1, 2775.0], [76.2, 2775.0], [76.3, 2775.0], [76.4, 2775.0], [76.5, 2775.0], [76.6, 2795.0], [76.7, 2795.0], [76.8, 2795.0], [76.9, 2795.0], [77.0, 2795.0], [77.1, 2795.0], [77.2, 2828.0], [77.3, 2828.0], [77.4, 2828.0], [77.5, 2828.0], [77.6, 2828.0], [77.7, 2828.0], [77.8, 2829.0], [77.9, 2829.0], [78.0, 2829.0], [78.1, 2829.0], [78.2, 2829.0], [78.3, 2843.0], [78.4, 2843.0], [78.5, 2843.0], [78.6, 2843.0], [78.7, 2843.0], [78.8, 2843.0], [78.9, 2856.0], [79.0, 2856.0], [79.1, 2856.0], [79.2, 2856.0], [79.3, 2856.0], [79.4, 2856.0], [79.5, 2859.0], [79.6, 2859.0], [79.7, 2859.0], [79.8, 2859.0], [79.9, 2859.0], [80.0, 2861.0], [80.1, 2861.0], [80.2, 2861.0], [80.3, 2861.0], [80.4, 2861.0], [80.5, 2861.0], [80.6, 2867.0], [80.7, 2867.0], [80.8, 2867.0], [80.9, 2867.0], [81.0, 2867.0], [81.1, 2867.0], [81.2, 2870.0], [81.3, 2870.0], [81.4, 2870.0], [81.5, 2870.0], [81.6, 2870.0], [81.7, 2870.0], [81.8, 2879.0], [81.9, 2879.0], [82.0, 2879.0], [82.1, 2879.0], [82.2, 2879.0], [82.3, 2894.0], [82.4, 2894.0], [82.5, 2894.0], [82.6, 2894.0], [82.7, 2894.0], [82.8, 2894.0], [82.9, 2927.0], [83.0, 2927.0], [83.1, 2927.0], [83.2, 2927.0], [83.3, 2927.0], [83.4, 2927.0], [83.5, 2941.0], [83.6, 2941.0], [83.7, 2941.0], [83.8, 2941.0], [83.9, 2941.0], [84.0, 2948.0], [84.1, 2948.0], [84.2, 2948.0], [84.3, 2948.0], [84.4, 2948.0], [84.5, 2948.0], [84.6, 2981.0], [84.7, 2981.0], [84.8, 2981.0], [84.9, 2981.0], [85.0, 2981.0], [85.1, 2981.0], [85.2, 2987.0], [85.3, 2987.0], [85.4, 2987.0], [85.5, 2987.0], [85.6, 2987.0], [85.7, 2987.0], [85.8, 2993.0], [85.9, 2993.0], [86.0, 2993.0], [86.1, 2993.0], [86.2, 2993.0], [86.3, 3006.0], [86.4, 3006.0], [86.5, 3006.0], [86.6, 3006.0], [86.7, 3006.0], [86.8, 3006.0], [86.9, 3017.0], [87.0, 3017.0], [87.1, 3017.0], [87.2, 3017.0], [87.3, 3017.0], [87.4, 3017.0], [87.5, 3020.0], [87.6, 3020.0], [87.7, 3020.0], [87.8, 3020.0], [87.9, 3020.0], [88.0, 3053.0], [88.1, 3053.0], [88.2, 3053.0], [88.3, 3053.0], [88.4, 3053.0], [88.5, 3053.0], [88.6, 3059.0], [88.7, 3059.0], [88.8, 3059.0], [88.9, 3059.0], [89.0, 3059.0], [89.1, 3059.0], [89.2, 3071.0], [89.3, 3071.0], [89.4, 3071.0], [89.5, 3071.0], [89.6, 3071.0], [89.7, 3071.0], [89.8, 3073.0], [89.9, 3073.0], [90.0, 3073.0], [90.1, 3073.0], [90.2, 3073.0], [90.3, 3083.0], [90.4, 3083.0], [90.5, 3083.0], [90.6, 3083.0], [90.7, 3083.0], [90.8, 3083.0], [90.9, 3120.0], [91.0, 3120.0], [91.1, 3120.0], [91.2, 3120.0], [91.3, 3120.0], [91.4, 3120.0], [91.5, 3132.0], [91.6, 3132.0], [91.7, 3132.0], [91.8, 3132.0], [91.9, 3132.0], [92.0, 3226.0], [92.1, 3226.0], [92.2, 3226.0], [92.3, 3226.0], [92.4, 3226.0], [92.5, 3226.0], [92.6, 3244.0], [92.7, 3244.0], [92.8, 3244.0], [92.9, 3244.0], [93.0, 3244.0], [93.1, 3244.0], [93.2, 3400.0], [93.3, 3400.0], [93.4, 3400.0], [93.5, 3400.0], [93.6, 3400.0], [93.7, 3400.0], [93.8, 3502.0], [93.9, 3502.0], [94.0, 3502.0], [94.1, 3502.0], [94.2, 3502.0], [94.3, 3687.0], [94.4, 3687.0], [94.5, 3687.0], [94.6, 3687.0], [94.7, 3687.0], [94.8, 3687.0], [94.9, 4274.0], [95.0, 4274.0], [95.1, 4274.0], [95.2, 4274.0], [95.3, 4274.0], [95.4, 4274.0], [95.5, 4328.0], [95.6, 4328.0], [95.7, 4328.0], [95.8, 4328.0], [95.9, 4328.0], [96.0, 4402.0], [96.1, 4402.0], [96.2, 4402.0], [96.3, 4402.0], [96.4, 4402.0], [96.5, 4402.0], [96.6, 4745.0], [96.7, 4745.0], [96.8, 4745.0], [96.9, 4745.0], [97.0, 4745.0], [97.1, 4745.0], [97.2, 4763.0], [97.3, 4763.0], [97.4, 4763.0], [97.5, 4763.0], [97.6, 4763.0], [97.7, 4763.0], [97.8, 4826.0], [97.9, 4826.0], [98.0, 4826.0], [98.1, 4826.0], [98.2, 4826.0], [98.3, 4998.0], [98.4, 4998.0], [98.5, 4998.0], [98.6, 4998.0], [98.7, 4998.0], [98.8, 4998.0], [98.9, 6141.0], [99.0, 6141.0], [99.1, 6141.0], [99.2, 6141.0], [99.3, 6141.0], [99.4, 6141.0], [99.5, 6230.0], [99.6, 6230.0], [99.7, 6230.0], [99.8, 6230.0], [99.9, 6230.0]], "isOverall": false, "label": "Home-1", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 94.0, "series": [{"data": [[600.0, 2.0], [700.0, 7.0], [800.0, 14.0], [900.0, 9.0], [1000.0, 7.0], [1100.0, 15.0], [1200.0, 6.0], [1300.0, 7.0], [1400.0, 7.0], [1500.0, 3.0], [1600.0, 8.0], [100.0, 80.0], [1700.0, 1.0], [1800.0, 3.0], [1900.0, 6.0], [2000.0, 2.0], [2100.0, 6.0], [2200.0, 14.0], [2300.0, 11.0], [2400.0, 21.0], [2500.0, 18.0], [2600.0, 12.0], [2700.0, 13.0], [2800.0, 5.0], [2900.0, 4.0], [3000.0, 2.0], [3300.0, 1.0], [3400.0, 1.0], [4000.0, 1.0], [4300.0, 2.0], [4100.0, 1.0], [4500.0, 1.0], [4600.0, 3.0], [4400.0, 1.0], [4700.0, 1.0], [4900.0, 2.0], [400.0, 2.0], [500.0, 1.0]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[0.0, 94.0], [1400.0, 3.0], [1500.0, 1.0], [1600.0, 5.0], [1700.0, 4.0], [1800.0, 1.0], [1900.0, 5.0], [2000.0, 4.0], [2100.0, 1.0], [2200.0, 5.0], [2300.0, 6.0], [2400.0, 6.0], [2500.0, 5.0], [2600.0, 8.0], [2700.0, 5.0], [2800.0, 4.0], [3000.0, 1.0], [3300.0, 4.0], [3400.0, 3.0], [3500.0, 4.0], [3700.0, 2.0], [3800.0, 1.0], [3900.0, 1.0], [4000.0, 4.0], [4100.0, 4.0], [4200.0, 5.0], [4300.0, 7.0], [4400.0, 6.0], [4500.0, 2.0], [4600.0, 5.0], [4700.0, 6.0], [4800.0, 3.0], [4900.0, 4.0], [5100.0, 9.0], [5000.0, 1.0], [5200.0, 11.0], [5300.0, 8.0], [5500.0, 7.0], [5600.0, 4.0], [5400.0, 5.0], [5800.0, 7.0], [5700.0, 5.0], [5900.0, 1.0], [6000.0, 3.0], [6100.0, 1.0], [6200.0, 1.0], [6600.0, 1.0], [6500.0, 2.0], [6800.0, 1.0], [6900.0, 2.0], [6700.0, 2.0], [7300.0, 2.0], [7400.0, 1.0], [7200.0, 2.0], [7500.0, 2.0], [7900.0, 1.0], [8700.0, 1.0], [9100.0, 1.0]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[900.0, 2.0], [1000.0, 8.0], [1100.0, 2.0], [1200.0, 1.0], [1300.0, 5.0], [1400.0, 4.0], [1500.0, 1.0], [1600.0, 5.0], [1700.0, 6.0], [1800.0, 5.0], [1900.0, 8.0], [2000.0, 3.0], [2100.0, 6.0], [2200.0, 7.0], [2300.0, 3.0], [2400.0, 11.0], [2500.0, 9.0], [2600.0, 13.0], [2700.0, 14.0], [2800.0, 14.0], [2900.0, 21.0], [3000.0, 11.0], [3100.0, 8.0], [3200.0, 2.0], [3700.0, 1.0], [4000.0, 1.0], [4800.0, 1.0], [4900.0, 1.0], [5100.0, 1.0], [5600.0, 1.0]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[0.0, 32.0], [900.0, 1.0], [1100.0, 2.0], [1200.0, 1.0], [1300.0, 1.0], [1400.0, 2.0], [1600.0, 3.0], [1700.0, 3.0], [1800.0, 4.0], [1900.0, 4.0], [2000.0, 10.0], [2100.0, 9.0], [2300.0, 14.0], [2200.0, 6.0], [2400.0, 14.0], [2500.0, 12.0], [2600.0, 9.0], [2700.0, 8.0], [2800.0, 10.0], [2900.0, 6.0], [3000.0, 8.0], [3100.0, 2.0], [3200.0, 2.0], [3400.0, 1.0], [3500.0, 1.0], [3600.0, 1.0], [4300.0, 1.0], [4200.0, 1.0], [4400.0, 1.0], [4700.0, 2.0], [4800.0, 1.0], [4900.0, 1.0], [6100.0, 1.0], [6200.0, 1.0]], "isOverall": false, "label": "Home-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 9100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 575.0, "series": [{"data": [[0.0, 2.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 103.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 575.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 270.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 117.57894736842103, "minX": 1.64330358E12, "maxY": 117.57894736842103, "series": [{"data": [[1.64330358E12, 117.57894736842103]], "isOverall": false, "label": "CDI-J&J", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64330358E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 29.0, "minX": 1.0, "maxY": 9193.0, "series": [{"data": [[75.0, 810.25], [73.0, 976.5], [74.0, 1103.5], [77.0, 1087.6666666666667], [76.0, 1152.5], [78.0, 693.0], [79.0, 972.0], [80.0, 845.0], [83.0, 1078.3333333333333], [82.0, 4797.0], [84.0, 1001.0], [86.0, 809.3333333333334], [87.0, 924.0], [89.0, 1192.0], [90.0, 1387.0], [91.0, 1298.6666666666667], [93.0, 953.0], [95.0, 4929.0], [96.0, 1055.0], [97.0, 1169.0], [98.0, 1062.0], [99.0, 1045.0], [100.0, 1106.0], [101.0, 907.0], [102.0, 754.0], [106.0, 753.0], [107.0, 785.0], [105.0, 4646.0], [109.0, 867.75], [111.0, 1206.0], [115.0, 2903.5], [114.0, 4562.0], [113.0, 4649.0], [112.0, 4322.0], [117.0, 1622.875], [118.0, 2871.3333333333335], [119.0, 2302.25], [116.0, 2850.0], [121.0, 1345.0], [122.0, 2842.3333333333335], [120.0, 2773.0], [126.0, 2307.5], [127.0, 2563.0], [125.0, 2740.5], [131.0, 1218.0], [135.0, 4178.0], [134.0, 2682.3333333333335], [133.0, 2605.5], [128.0, 2616.0], [143.0, 2408.5], [140.0, 3028.6666666666665], [139.0, 2661.0], [138.0, 3389.0], [137.0, 2426.0], [149.0, 2182.6666666666665], [150.0, 2178.3333333333335], [151.0, 1821.0], [147.0, 2382.0], [146.0, 2504.0], [144.0, 2456.0], [152.0, 2142.6666666666665], [158.0, 2164.0], [159.0, 1215.0], [155.0, 2631.6666666666665], [153.0, 2474.0], [160.0, 774.3333333333333], [162.0, 736.6666666666666], [163.0, 963.2307692307688], [164.0, 1189.2666666666667], [161.0, 1136.857142857143], [165.0, 818.7777777777778], [166.0, 1193.75], [167.0, 904.7272727272727], [168.0, 1753.6250000000002], [169.0, 1643.3333333333333], [170.0, 687.0], [171.0, 1306.8333333333333], [173.0, 1998.0769230769233], [174.0, 2045.2], [172.0, 1373.2727272727275]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[142.51666666666657, 1536.9366666666676]], "isOverall": false, "label": "Login-page-Aggregated", "isController": false}, {"data": [[2.0, 5550.0], [3.0, 4262.0], [4.0, 7259.0], [5.0, 5428.0], [6.0, 4510.0], [7.0, 5838.0], [8.0, 4270.0], [9.0, 3306.0], [10.0, 6246.0], [11.0, 7515.0], [12.0, 6599.0], [13.0, 8743.0], [14.0, 6046.0], [16.0, 6449.0], [17.0, 6750.0], [18.0, 7249.0], [19.0, 4615.0], [20.0, 5895.0], [21.0, 2320.0], [22.0, 4171.0], [24.0, 5625.0], [25.0, 6014.0], [26.0, 4354.0], [27.0, 4943.0], [28.0, 4375.0], [30.0, 6112.5], [31.0, 4213.0], [33.0, 4160.0], [32.0, 4107.0], [34.0, 3922.0], [37.0, 4371.0], [36.0, 4539.5], [39.0, 5516.0], [38.0, 4087.0], [41.0, 5111.0], [40.0, 4069.0], [42.0, 4732.0], [44.0, 4672.0], [47.0, 4702.0], [46.0, 4546.0], [49.0, 7599.0], [48.0, 6031.0], [51.0, 4807.0], [50.0, 4696.0], [53.0, 5473.5], [55.0, 5149.0], [54.0, 4261.0], [57.0, 4827.0], [56.0, 4681.0], [59.0, 5006.0], [58.0, 5531.0], [61.0, 5339.0], [60.0, 4999.0], [63.0, 5199.0], [62.0, 5812.0], [66.0, 5187.0], [65.0, 5282.0], [64.0, 4979.0], [71.0, 5495.0], [70.0, 5294.0], [69.0, 5336.0], [68.0, 5496.0], [75.0, 5647.0], [74.0, 5384.0], [73.0, 5335.0], [72.0, 5421.0], [79.0, 7380.0], [78.0, 5228.0], [77.0, 7476.0], [76.0, 5230.0], [81.0, 5163.0], [80.0, 5258.0], [87.0, 5401.0], [86.0, 5326.0], [85.0, 5236.0], [84.0, 5251.666666666667], [91.0, 7382.0], [90.0, 5779.0], [89.0, 5388.0], [88.0, 5155.0], [95.0, 5282.0], [94.0, 5485.0], [92.0, 5603.0], [99.0, 5456.0], [98.0, 5567.0], [97.0, 5565.0], [96.0, 5212.0], [103.0, 5779.0], [102.0, 6907.0], [101.0, 6425.0], [107.0, 6849.0], [106.0, 5503.0], [105.0, 5610.0], [104.0, 5721.0], [111.0, 5827.0], [110.0, 5874.0], [109.0, 5797.0], [108.0, 6618.0], [115.0, 2815.0], [114.0, 5565.0], [113.0, 3070.0], [112.0, 5805.0], [119.0, 2601.0], [118.0, 2635.0], [117.0, 2871.0], [116.0, 2834.0], [123.0, 2597.0], [122.0, 2657.0], [121.0, 2712.0], [120.0, 2702.0], [127.0, 2785.0], [126.0, 5180.0], [125.0, 2814.0], [124.0, 5296.0], [135.0, 4789.0], [134.0, 4885.0], [133.0, 4957.0], [132.0, 2468.0], [131.0, 2600.0], [130.0, 2719.0], [129.0, 2430.0], [128.0, 2758.0], [143.0, 4478.0], [142.0, 2217.0], [141.0, 2284.0], [140.0, 4505.0], [139.0, 2374.0], [138.0, 2342.0], [137.0, 4609.0], [136.0, 2418.0], [151.0, 2542.0], [150.0, 2490.0], [149.0, 4330.0], [148.0, 4426.0], [147.0, 2588.0], [146.0, 3424.5], [144.0, 4428.0], [159.0, 1191.0], [158.0, 4039.0], [157.0, 2507.0], [156.0, 4106.0], [155.0, 4213.0], [154.0, 3363.0], [152.0, 4328.0], [161.0, 1158.857142857143], [160.0, 718.0], [162.0, 397.6521739130435], [165.0, 966.5833333333333], [163.0, 636.7391304347825], [164.0, 817.2142857142858], [167.0, 783.8333333333334], [166.0, 34.4], [169.0, 1014.9999999999999], [168.0, 35.333333333333336], [170.0, 1817.5], [172.0, 845.0833333333333], [171.0, 35.25], [173.0, 1371.4], [174.0, 2947.0], [1.0, 9193.0]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[120.51000000000002, 2953.810000000002]], "isOverall": false, "label": "Home-Aggregated", "isController": false}, {"data": [[2.0, 2467.0], [3.0, 2283.0], [4.0, 2985.0], [5.0, 2549.0], [6.0, 3269.0], [7.0, 2765.0], [8.0, 3149.0], [9.0, 1929.0], [10.0, 3020.0], [11.0, 3113.0], [12.0, 3097.0], [13.0, 2601.0], [14.0, 3040.0], [16.0, 2983.5], [17.0, 5647.0], [18.0, 2920.0], [19.0, 2486.0], [20.0, 2908.0], [21.0, 1391.0], [22.0, 2397.0], [24.0, 2852.5], [25.0, 2954.0], [26.0, 2460.0], [27.0, 2587.0], [28.0, 2461.0], [30.0, 3645.0], [31.0, 2364.0], [33.0, 2691.0], [32.0, 2504.0], [34.0, 2468.0], [37.0, 2528.0], [36.0, 2573.0], [39.0, 2872.0], [38.0, 2443.0], [41.0, 2774.0], [40.0, 2428.0], [42.0, 2658.0], [44.0, 2659.0], [47.0, 2699.0], [46.0, 2513.3333333333335], [49.0, 2854.0], [48.0, 2978.0], [51.0, 2795.0], [50.0, 2625.0], [53.0, 2937.5], [55.0, 2835.0], [54.0, 2479.0], [57.0, 2711.0], [56.0, 2668.0], [59.0, 2991.0], [58.0, 3015.0], [61.0, 3055.0], [60.0, 2932.0], [63.0, 3069.0], [62.0, 2917.0], [66.0, 3039.0], [65.0, 3130.0], [64.0, 3035.0], [71.0, 3137.0], [70.0, 2903.0], [69.0, 3051.0], [68.0, 3139.0], [75.0, 3216.0], [74.0, 2925.0], [73.0, 2981.0], [72.0, 3139.0], [79.0, 4959.0], [78.0, 2930.0], [77.0, 5156.0], [76.0, 3038.0], [81.0, 2894.0], [80.0, 2901.0], [87.0, 2734.0], [86.0, 2998.0], [85.0, 2793.0], [84.0, 2848.0], [91.0, 2555.0], [90.0, 2647.0], [89.0, 2931.0], [88.0, 2729.0], [95.0, 2728.0], [94.0, 2842.0], [92.0, 2836.0], [99.0, 2785.0], [98.0, 2849.0], [97.0, 2736.0], [96.0, 2518.0], [103.0, 2911.0], [102.0, 4050.0], [101.0, 2552.5], [107.0, 1850.0], [106.0, 2659.0], [105.0, 2835.0], [104.0, 2893.0], [111.0, 2706.0], [110.0, 2881.0], [109.0, 2869.0], [108.0, 3747.0], [114.0, 2703.0], [112.0, 2857.0], [126.0, 2238.0], [124.0, 2278.0], [135.0, 2194.0], [134.0, 2168.0], [133.0, 2228.0], [143.0, 1936.0], [140.0, 1987.0], [137.0, 2167.0], [149.0, 1742.0], [148.0, 1830.0], [146.0, 1830.0], [144.0, 1768.0], [158.0, 1428.0], [156.0, 1483.0], [155.0, 1472.0], [154.0, 1595.0], [152.0, 1307.0], [161.0, 1487.5], [160.0, 1372.0], [162.0, 1682.8], [165.0, 1685.2], [164.0, 1819.8333333333333], [163.0, 1980.2857142857142], [167.0, 2248.0], [169.0, 2294.0], [173.0, 1024.75], [174.0, 1339.1666666666665], [172.0, 1608.0], [170.0, 1034.0], [1.0, 2963.0]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[93.69142857142855, 2467.485714285714]], "isOverall": false, "label": "Home-0-Aggregated", "isController": false}, {"data": [[2.0, 3083.0], [3.0, 1979.0], [4.0, 4274.0], [5.0, 2879.0], [6.0, 1241.0], [7.0, 3073.0], [8.0, 1120.0], [9.0, 1376.0], [10.0, 3226.0], [11.0, 4402.0], [12.0, 3502.0], [13.0, 6141.0], [14.0, 3006.0], [16.0, 3465.5], [17.0, 1103.0], [18.0, 4328.0], [19.0, 2129.0], [20.0, 2987.0], [21.0, 928.0], [22.0, 1773.0], [24.0, 2772.0], [25.0, 3059.0], [26.0, 1894.0], [27.0, 2355.0], [28.0, 1913.0], [30.0, 2467.0], [31.0, 1849.0], [33.0, 1469.0], [32.0, 1603.0], [34.0, 1453.0], [37.0, 1842.0], [36.0, 1966.0], [39.0, 2644.0], [38.0, 1644.0], [41.0, 2336.0], [40.0, 1640.0], [42.0, 2073.0], [44.0, 2013.0], [47.0, 2003.0], [46.0, 2032.3333333333333], [49.0, 4745.0], [48.0, 3053.0], [51.0, 2012.0], [50.0, 2070.0], [53.0, 2535.5], [55.0, 2313.0], [54.0, 1781.0], [57.0, 2116.0], [56.0, 2013.0], [59.0, 2014.0], [58.0, 2515.0], [61.0, 2283.0], [60.0, 2066.0], [63.0, 2130.0], [62.0, 2894.0], [66.0, 2148.0], [65.0, 2151.0], [64.0, 1943.0], [71.0, 2358.0], [70.0, 2390.0], [69.0, 2285.0], [68.0, 2356.5], [75.0, 2431.0], [74.0, 2459.0], [73.0, 2354.0], [72.0, 2282.0], [79.0, 2421.0], [78.0, 2298.0], [77.0, 2320.0], [76.0, 2191.0], [81.0, 2269.0], [80.0, 2357.0], [87.0, 2667.0], [86.0, 2328.0], [85.0, 2442.0], [84.0, 2403.3333333333335], [91.0, 4826.0], [90.0, 3132.0], [89.0, 2456.0], [88.0, 2425.0], [95.0, 2553.0], [94.0, 2642.5], [92.0, 2767.0], [99.0, 2671.0], [98.0, 2718.0], [97.0, 2829.0], [96.0, 2694.0], [103.0, 2867.0], [102.0, 2856.0], [101.0, 3872.0], [107.0, 4998.0], [106.0, 2843.0], [105.0, 2775.0], [104.0, 2828.0], [111.0, 3120.0], [110.0, 2993.0], [109.0, 2927.0], [108.0, 2870.0], [114.0, 2861.0], [112.0, 2948.0], [126.0, 2941.0], [124.0, 3017.0], [135.0, 2594.0], [134.0, 2716.0], [133.0, 2729.0], [143.0, 2541.0], [140.0, 2517.0], [137.0, 2442.0], [149.0, 2587.0], [148.0, 2595.0], [146.0, 2641.0], [144.0, 2660.0], [158.0, 2610.0], [156.0, 2623.0], [155.0, 2740.0], [154.0, 2483.0], [152.0, 3020.0], [161.0, 29.0], [160.0, 31.0], [162.0, 34.0], [165.0, 586.2], [164.0, 35.66666666666667], [163.0, 34.714285714285715], [167.0, 32.5], [169.0, 34.0], [173.0, 2352.25], [174.0, 2092.5], [172.0, 1659.0], [170.0, 2563.0], [1.0, 6230.0]], "isOverall": false, "label": "Home-1", "isController": false}, {"data": [[93.69142857142855, 2119.205714285715]], "isOverall": false, "label": "Home-1-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 174.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 10433.683333333332, "minX": 1.64330358E12, "maxY": 599472.15, "series": [{"data": [[1.64330358E12, 599472.15]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.64330358E12, 10433.683333333332]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64330358E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1536.9366666666676, "minX": 1.64330358E12, "maxY": 2953.810000000002, "series": [{"data": [[1.64330358E12, 1536.9366666666676]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[1.64330358E12, 2953.810000000002]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[1.64330358E12, 2467.485714285714]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[1.64330358E12, 2119.205714285715]], "isOverall": false, "label": "Home-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64330358E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1509.016666666667, "minX": 1.64330358E12, "maxY": 2467.44, "series": [{"data": [[1.64330358E12, 1509.016666666667]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[1.64330358E12, 1708.1499999999994]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[1.64330358E12, 2467.44]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[1.64330358E12, 1732.3200000000002]], "isOverall": false, "label": "Home-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64330358E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.64330358E12, "maxY": 201.37000000000003, "series": [{"data": [[1.64330358E12, 201.37000000000003]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[1.64330358E12, 0.0]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[1.64330358E12, 0.0]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[1.64330358E12, 0.0]], "isOverall": false, "label": "Home-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64330358E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 424.0, "minX": 1.64330358E12, "maxY": 9193.0, "series": [{"data": [[1.64330358E12, 9193.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.64330358E12, 5256.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.64330358E12, 7399.859999999994]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.64330358E12, 5796.0999999999985]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.64330358E12, 424.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.64330358E12, 2596.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64330358E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 40.0, "minX": 2.0, "maxY": 7711.5, "series": [{"data": [[2.0, 7711.5], [148.0, 2247.0], [159.0, 1730.0], [10.0, 4268.0], [44.0, 1071.5], [46.0, 1031.5], [48.0, 3021.5], [53.0, 3044.5], [55.0, 2776.0], [56.0, 2591.0], [65.0, 3020.0], [88.0, 4078.0], [120.0, 2610.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[148.0, 43.5], [159.0, 40.0], [53.0, 2834.0], [55.0, 2679.5], [56.0, 2375.5], [120.0, 139.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 159.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 40.0, "minX": 2.0, "maxY": 2922.5, "series": [{"data": [[2.0, 2455.5], [148.0, 2195.5], [159.0, 1726.0], [10.0, 2375.0], [44.0, 1037.0], [46.0, 1031.0], [48.0, 2467.5], [53.0, 2922.5], [55.0, 2729.0], [56.0, 2484.0], [65.0, 2836.0], [88.0, 2412.5], [120.0, 2455.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[148.0, 43.5], [159.0, 40.0], [53.0, 2779.0], [55.0, 2535.0], [56.0, 2312.0], [120.0, 139.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 159.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 15.833333333333334, "minX": 1.64330358E12, "maxY": 15.833333333333334, "series": [{"data": [[1.64330358E12, 15.833333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64330358E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.5166666666666667, "minX": 1.64330358E12, "maxY": 8.416666666666666, "series": [{"data": [[1.64330358E12, 8.416666666666666]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.64330358E12, 2.9166666666666665]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.64330358E12, 3.9833333333333334]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.64330358E12, 0.5166666666666667]], "isOverall": false, "label": "419", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64330358E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.5333333333333333, "minX": 1.64330358E12, "maxY": 3.65, "series": [{"data": [[1.64330358E12, 0.5333333333333333]], "isOverall": false, "label": "Home-1-failure", "isController": false}, {"data": [[1.64330358E12, 2.3833333333333333]], "isOverall": false, "label": "Home-1-success", "isController": false}, {"data": [[1.64330358E12, 1.35]], "isOverall": false, "label": "Login-page-failure", "isController": false}, {"data": [[1.64330358E12, 3.65]], "isOverall": false, "label": "Login-page-success", "isController": false}, {"data": [[1.64330358E12, 2.6166666666666667]], "isOverall": false, "label": "Home-failure", "isController": false}, {"data": [[1.64330358E12, 2.3833333333333333]], "isOverall": false, "label": "Home-success", "isController": false}, {"data": [[1.64330358E12, 2.9166666666666665]], "isOverall": false, "label": "Home-0-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64330358E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 4.5, "minX": 1.64330358E12, "maxY": 11.333333333333334, "series": [{"data": [[1.64330358E12, 11.333333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.64330358E12, 4.5]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64330358E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

